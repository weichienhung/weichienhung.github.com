<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: octopress | Practice makes perfect]]></title>
  <link href="http://weichienhung.github.io/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://weichienhung.github.io/"/>
  <updated>2014-10-13T22:58:40+08:00</updated>
  <id>http://weichienhung.github.io/</id>
  <author>
    <name><![CDATA[Weichien Hung]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Apply octopress new theme]]></title>
    <link href="http://weichienhung.github.io/blog/2013/09/29/apply-octopress-new-theme/"/>
    <updated>2013-09-29T15:04:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/09/29/apply-octopress-new-theme</id>
    <content type="html"><![CDATA[<p>I change octopress theme to <a href="http://zespia.tw/Octopress-Theme-Slash/index_tw.html">slash</a>.
I also do a little modification. like<br/>
1. Add avatar<br/>
2. Show site's subtitle<br/>
3. Add <em>About</em> page and remove <em>Blog</em> page in the navigation header.<br/>
4. Modify CSS to fit mobile browing.<br/>
I feel whole site becomes beatiful and clear.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress 設定問題]]></title>
    <link href="http://weichienhung.github.io/blog/2013/07/28/octopress-she-ding-wen-ti/"/>
    <updated>2013-07-28T11:20:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/07/28/octopress-she-ding-wen-ti</id>
    <content type="html"><![CDATA[<p>這兩天使用octopress時遇到了一些問題，有簡單google解決也有亂試之下解決</p>

<ul>
<li>想產生新的文章時出現
<code>sh
You have already activated rake 10.1.0, but your Gemfile requires rake 0.9.6. Using bundle exec
</code></li>
</ul>


<!--more-->


<p>google之下很單純，只要修改你的Gemfile<br/>
本來是
<code>
gem 'rake', '~&gt; 0.9.6'
</code>
改成以下即可，不過老實說我自己的版本什麼時候吃到10.0我也沒印象
<code>
gem 'rake', '~&gt; 10.0'
</code></p>

<ul>
<li>rake deploy時出現
<code>
src refspec master does not match any
error src refspec master does not match any. error failed to push some refs to
</code>
一開始google時網路大部份的文章都是說你的project repo還沒有任何commit，只要加個README commit即可。
但我怎麼試都不行而且明明我的project己經用了一陣子了後來終於發現原來是我的git沒有local master branch。
原因是我之前手動把<code>_deploy</code>目錄砍過的樣子，理論上在你的<code>_deploy</code>目錄打<code>git branch</code>應該要出現<code>* master</code>
在根目錄底下則是出現<code>* source</code><br/>
後來的解決方法就是重設github page
<code>
rake setup_github_pages
</code></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[hello octopress]]></title>
    <link href="http://weichienhung.github.io/blog/2013/07/07/hello-again/"/>
    <updated>2013-07-07T15:22:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/07/07/hello-again</id>
    <content type="html"><![CDATA[<p>真的是好久沒寫blog了。看了一下最後一篇是在3月2日已經整整4個月沒寫了。</p>

<p>markdown的語法也都快忘光了:(一開始執行rake new_post時還發生錯誤無法產生新文章，快速地google了一下原來是dependency太舊的關係，執行完bundle update就OK了真是好險啊。
前陣子使用emberjs發現了一些之前沒注意到的細節。</p>

<!--more-->


<h3>使用transitionTo不會呼叫在route裡的model function</h3>

<p>例如底下的程式碼，當使用transitionTo()到post route的時候. emberjs並不會幫你呼叫model(), 所以在toPost()裡面必須自己將所需要的model產生並當成
參數一併帶在transitionTo()裡面。model()只有當你直接在URL進入post route才會被呼叫。
setupController則是無論使用transitionTo()或是在browser直接打URL進去post route都會被呼叫。
``` javascript example</p>

<pre><code>application.PostRoute = Ember.Route.extend({
    setupController: function(controller, model) {
        controller.set('content', model);
    },

    model : function(params){
        return application.Post.find(params.post_id);
    }
});


toPost : function(target_post){
        var model = application.Post.find(target_post);
        this.transitionTo('post', model);
},
</code></pre>

<p>```</p>

<h3>nested route使用</h3>

<p>一開始以為nest route的命名規則都是parent route name + child route name。
其實不盡然，原來是要看你是使用this.route或是this.resource如果是this.route的話就要加上parent name(如底下的board and summary route)</p>

<p>當要轉換到board這個route就要加上parent route name. (見底下的transitionTo())
```
MyApp.Router.map(function() {</p>

<pre><code>this.route("landing", {path: "/landing"});
this.resource("lobby", {path: "/lobby"}, function(){
  this.route("board", {path: "/board"} );
  this.resource("store", {path: "/store"}, function(){
    this.route("summary", {path: "/summary/:game_id"} );
  });
});
this.route("pageNotFound", {path: "*:"});
</code></pre>

<p>});</p>

<p>//route naming
MyApp.LandingRoute = Ember.Route.extend({});
MyApp.LobbyRoute = Ember.Route.extend({});
MyApp.LobbyBoardRoute = Ember.Route.extend({});
MyApp.StoreRoute = Ember.Route.extend({});
MyApp.StoreSummaryRoute = Ember.Route.extend({});</p>

<p>toBoard : function(){</p>

<pre><code>this.transitionTo('lobby.board');
</code></pre>

<p>}</p>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用漂亮的code blocks]]></title>
    <link href="http://weichienhung.github.io/blog/2013/01/31/use-good-hightlight-code-block/"/>
    <updated>2013-01-31T23:48:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/01/31/use-good-hightlight-code-block</id>
    <content type="html"><![CDATA[<p>前幾天在寫emberjs dynamic URL的範例時覺得為什麼預設的code block這麼不好看。
上網google了一下找到這篇<a href="http://octopress.org/docs/blogging/code/">文章</a>
介紹如何使用預設在octopress裡面更好看的code blocks。</p>

<!--more-->


<p>看底下這個code block，是不是一整個變的很精美。
``` javascript Solarized Hightlight example http://www.google.com 點我到google
define(['app'], function (App) {</p>

<pre><code>console.log("hello world");
</code></pre>

<p>});
<code>``
使用時用三個</code>把程式碼區塊包起來，然後分別可以設定你所用的語言，標題，還有可以放URL連到原始碼</p>

<p>語法如下：</p>

<pre><code>``` [語言][標題][URL][URL顯示名稱]
你的code snippet
```
</code></pre>

<p>像我上面的範例就是</p>

<pre><code>``` javascript TestJavaScript http://www.google.com 點我到google
define(['app'], function (App) {
    console.log("hello world");
});
```
</code></pre>

<p>引用Gist的部份先跳過，我目前還沒用到Gist</p>

<p>從檔案系統引用code的話你可以把檔案放在source/downloads/code底下然後引用它。目錄可以在<code>_config.yml</code>裡修改。config名稱是<code>code_dir</code></p>

<p>語法如下：</p>

<pre><code>{ % include_code [標題] [lang:語言] 檔案路徑 %}
</code></pre>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (sample.js)</span> <a href='/downloads/code/sample.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">App</span> <span class="o">=</span> <span class="nx">Ember</span><span class="p">.</span><span class="nx">Application</span><span class="p">.</span><span class="nx">create</span><span class="p">({});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
上面的範例就是</p>

<pre><code>{ % include_code sample.js %}
</code></pre>

<p>最後是inline code blocks</p>

<p>語法如下：</p>

<pre><code>{ % codeblock [標題][語言][URL][URL顯示名稱] %}
{ % endcodeblock %}
</code></pre>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>sample.js  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;hello world&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
上面的範例就是</p>

<pre><code>{ % codeblock sample.js lang:javascript %}
console.log('hello world');
{ % endcodeblock %}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[讓web site能夠被search engine找到]]></title>
    <link href="http://weichienhung.github.io/blog/2013/01/27/submit-sitemaps-dot-xml/"/>
    <updated>2013-01-27T23:33:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/01/27/submit-sitemaps-dot-xml</id>
    <content type="html"><![CDATA[<p>
昨天在blog右上角的search打入關鍵字一直找不到東西。想說等到讓search engine發現自己web site似乎太被動了。
上網查了一下octopress本身就會自動產生sitemap.xml檔。只要把這個檔案丟到google或是像bing這樣的搜尋引擎網站就好了，
還真是相當方便。<br/>
先登入到 <a href="https://www.google.com/webmasters/">Google網站管理工具</a>
然後根據網站的步驟去做，主要是必須放一個驗證檔到你的github上然後驗證網站是你所屬。
</p>

]]></content>
  </entry>
  
</feed>
