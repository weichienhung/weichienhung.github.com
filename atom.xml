<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Weichien's studying note]]></title>
  <link href="http://weichienhung.github.io/atom.xml" rel="self"/>
  <link href="http://weichienhung.github.io/"/>
  <updated>2013-11-30T23:44:28+08:00</updated>
  <id>http://weichienhung.github.io/</id>
  <author>
    <name><![CDATA[Weichien Hung]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[new rails project for fun]]></title>
    <link href="http://weichienhung.github.io/blog/2013/11/30/new-practicing-rails-project/"/>
    <updated>2013-11-30T20:16:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/11/30/new-practicing-rails-project</id>
    <content type="html"><![CDATA[<p>Today i push a new rails project to <a href="http://weichien-lunch.herokuapp.com/">heroku</a> called lunch.
I also push to <a href="https://github.com/weichienhung/lunch">github</a>.
Every week day i and colleague have to discuss which lunch to eat.
It will be very helpful if a site can random pick a lunch restaurant for us. So i create a new rails project for this purpose.
The basic idea is simple, everybody can share a restaurant and add others&#8217; restaurants to favorites list. Then site pick a restaurant for you.
I can study new stuff when i practice rails each time. I try to write down here.</p>

<!-- more -->


<h3>image store in S3</h3>

<p>Because the heroku doesn&#8217;t allow to store images, i move the paperclip default storage to S3.
It&#8217;s very easy to implement, just follow this <a href="https://devcenter.heroku.com/articles/paperclip-s3">tutorial</a></p>

<h3>social network signin</h3>

<p>This time i integrate three social networks(facebook, twitter, google).
I am stuck in google app setting for a while. Because they all have different callback url setting.
Finally i resolved and here are screenshots for these sites. These samples are for <code>127.0.0.1:3000</code> testing</p>

<h4>google</h4>

<p><img src="http://weichienhung.github.io/images/posts/20131129-1.png" width="800" height="600" title="list-image" alt="list"></p>

<h4>twitter</h4>

<p><img src="http://weichienhung.github.io/images/posts/20131129-2.png" width="800" height="600" title="list-image" alt="list"></p>

<h4>facebook</h4>

<p><img src="http://weichienhung.github.io/images/posts/20131129-3.png" width="800" height="600" title="list-image" alt="list"></p>

<h3>MVP design</h3>

<p>I add a <code>app/presenters</code> folder and make controller logic more impact.
Add folder path to <code>application.rb</code> that controller could access them.</p>

<figure class='code'><figcaption><span>application.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">paths</span><span class="o">.</span><span class="n">add</span> <span class="s2">&quot;app/presenters&quot;</span><span class="p">,</span> <span class="ss">glob</span><span class="p">:</span> <span class="s2">&quot;**/*.rb&quot;</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">autoload_paths</span> <span class="o">+=</span> <span class="no">Dir</span><span class="o">[</span><span class="s2">&quot;</span><span class="si">#{</span><span class="no">Rails</span><span class="o">.</span><span class="n">root</span><span class="si">}</span><span class="s2">/app/presenters/*&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Google map support</h3>

<p>Use <code>gmaps4rails</code> gem. github <a href="https://github.com/apneadiving/Google-Maps-for-Rails">link</a>.
Good video tutorial <a href="https://www.youtube.com/watch?v=R0l-7en3dUw&amp;feature=youtu.be">link</a></p>

<h3>rspec testing</h3>

<h4>devise signin</h4>

<p>Just create a user and call <code>signin</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">FactoryGirl</span><span class="o">.</span><span class="n">define</span> <span class="k">do</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">factory</span> <span class="ss">:user</span> <span class="k">do</span>
</span><span class='line'>    <span class="nb">name</span> <span class="ss">Faker</span><span class="p">:</span><span class="ss">:Name</span><span class="o">.</span><span class="n">name</span>
</span><span class='line'>    <span class="n">sequence</span><span class="p">(</span><span class="ss">:email</span><span class="p">)</span> <span class="p">{</span> <span class="o">|</span><span class="n">n</span><span class="o">|</span> <span class="s2">&quot;example</span><span class="si">#{</span><span class="n">n</span><span class="si">}</span><span class="s2">@example.com&quot;</span> <span class="p">}</span> <span class="c1"># create different email each user.</span>
</span><span class='line'>    <span class="n">password</span> <span class="s1">&#39;a1234567&#39;</span>
</span><span class='line'>    <span class="n">password_confirmation</span> <span class="s1">&#39;a1234567&#39;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">factory</span> <span class="ss">:user_with_restaurant</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">after</span><span class="p">(</span><span class="ss">:create</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">user</span><span class="o">|</span>
</span><span class='line'>        <span class="n">restaurant</span> <span class="o">=</span> <span class="no">FactoryGirl</span><span class="o">.</span><span class="n">build</span><span class="p">(</span><span class="ss">:restaurant</span><span class="p">)</span>
</span><span class='line'>        <span class="n">restaurant</span><span class="o">.</span><span class="n">creator_id</span> <span class="o">=</span> <span class="n">user</span><span class="o">.</span><span class="n">id</span>
</span><span class='line'>        <span class="n">restaurant</span><span class="o">.</span><span class="n">save!</span>
</span><span class='line'>        <span class="n">user</span><span class="o">.</span><span class="n">favor_restaurant</span> <span class="o">&lt;&lt;</span> <span class="n">restaurant</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># It&#39;s good practice to put in before block</span>
</span><span class='line'><span class="n">before</span><span class="p">(</span><span class="ss">:each</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>  <span class="vi">@user</span> <span class="o">=</span> <span class="n">create</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span>
</span><span class='line'>  <span class="n">sign_in</span> <span class="vi">@user</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Use expect to assert result</h4>

<p>For example <code>restaurant</code> is the return object from controller.</p>

<figure class='code'><figcaption><span>xx_controller.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">def</span> <span class="nf">new</span>
</span><span class='line'>    <span class="vi">@restaurant</span> <span class="o">=</span> <span class="no">Restaurant</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span>xx_spec.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">restaurant</span> <span class="o">=</span> <span class="n">assigns</span><span class="p">(</span><span class="ss">:restaurant</span><span class="p">)</span>
</span><span class='line'><span class="n">expect</span><span class="p">(</span><span class="n">response</span><span class="o">.</span><span class="n">status</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span> <span class="mi">302</span> <span class="c1"># check http status code</span>
</span><span class='line'><span class="n">expect</span><span class="p">(</span><span class="n">response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">render_template</span> <span class="ss">:index</span> <span class="c1"># check render template</span>
</span><span class='line'><span class="n">expect</span><span class="p">(</span><span class="n">restaurant</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_a_new</span><span class="p">(</span><span class="no">Restaurant</span><span class="p">)</span> <span class="c1"># check restaurant is new object</span>
</span><span class='line'><span class="n">expect</span><span class="p">(</span><span class="n">flash</span><span class="o">[</span><span class="ss">:notice</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be</span> <span class="c1"># check flash[:notice] exist</span>
</span><span class='line'><span class="n">expect</span><span class="p">(</span><span class="n">flash</span><span class="o">[</span><span class="ss">:warn</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_nil</span> <span class="c1"># check flash[:warn] nil</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># we could even use block </span>
</span><span class='line'><span class="c1"># check restaurant is added by 1 after post to create controller</span>
</span><span class='line'><span class="n">expect</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">post</span> <span class="ss">:create</span><span class="p">,</span> <span class="ss">restaurant</span><span class="p">:</span> <span class="n">attributes_for</span><span class="p">(</span><span class="ss">:restaurant</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span><span class="o">.</span><span class="n">to</span> <span class="n">change</span><span class="p">(</span><span class="no">Restaurant</span><span class="p">,</span> <span class="ss">:count</span><span class="p">)</span><span class="o">.</span><span class="n">by</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[open source project studying]]></title>
    <link href="http://weichienhung.github.io/blog/2013/11/03/open-source-projects-studying/"/>
    <updated>2013-11-03T09:57:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/11/03/open-source-projects-studying</id>
    <content type="html"><![CDATA[<p>I study the open source project <a href="https://github.com/gitlabhq/gitlabhq">gitlab</a>. It&#8217;s a well coding rails structure.
Here are some examples i think they are good.</p>

<h3>Don&#8217;t query data in View/Helper</h3>

<p>Avoid perform query in view/helper in Xdite&#8217;s <a href="http://blog.xdite.net/posts/2013/10/31/maintainable-rails-view-6">Maintainable Rails View</a>.</p>

<figure class='code'><figcaption><span>dashboard_controller.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">show</span>
</span><span class='line'>  <span class="vi">@projects_limit</span> <span class="o">=</span> <span class="mi">30</span>
</span><span class='line'>  <span class="vi">@groups</span> <span class="o">=</span> <span class="n">current_user</span><span class="o">.</span><span class="n">authorized_groups</span><span class="o">.</span><span class="n">sort_by</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:human_name</span><span class="p">)</span>
</span><span class='line'>  <span class="vi">@has_authorized_projects</span> <span class="o">=</span> <span class="vi">@projects</span><span class="o">.</span><span class="n">count</span> <span class="o">&gt;</span> <span class="mi">0</span>
</span><span class='line'>  <span class="vi">@projects_count</span> <span class="o">=</span> <span class="vi">@projects</span><span class="o">.</span><span class="n">count</span>
</span><span class='line'>  <span class="vi">@projects</span> <span class="o">=</span> <span class="vi">@projects</span><span class="o">.</span><span class="n">limit</span><span class="p">(</span><span class="vi">@projects_limit</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="vi">@events</span> <span class="o">=</span> <span class="no">Event</span><span class="o">.</span><span class="n">in_projects</span><span class="p">(</span><span class="n">current_user</span><span class="o">.</span><span class="n">authorized_projects</span><span class="o">.</span><span class="n">pluck</span><span class="p">(</span><span class="ss">:id</span><span class="p">))</span>
</span><span class='line'>  <span class="vi">@events</span> <span class="o">=</span> <span class="vi">@event_filter</span><span class="o">.</span><span class="n">apply_filter</span><span class="p">(</span><span class="vi">@events</span><span class="p">)</span>
</span><span class='line'>  <span class="vi">@events</span> <span class="o">=</span> <span class="vi">@events</span><span class="o">.</span><span class="n">limit</span><span class="p">(</span><span class="mi">20</span><span class="p">)</span><span class="o">.</span><span class="n">offset</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:offset</span><span class="o">]</span> <span class="o">||</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="vi">@last_push</span> <span class="o">=</span> <span class="n">current_user</span><span class="o">.</span><span class="n">recent_push</span>
</span><span class='line'>  <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>    <span class="nb">format</span><span class="o">.</span><span class="n">html</span>
</span><span class='line'>    <span class="nb">format</span><span class="o">.</span><span class="n">js</span>
</span><span class='line'>    <span class="nb">format</span><span class="o">.</span><span class="n">atom</span> <span class="p">{</span> <span class="n">render</span> <span class="ss">layout</span><span class="p">:</span> <span class="kp">false</span> <span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<!-- more -->


<h3>Group class methods</h3>

<p>You could put all your class methods inside <code>class &lt;&lt; self</code>. Avoid to put <code>self.</code> in each methods.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># method 1</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Ability</span>
</span><span class='line'>  <span class="k">class</span> <span class="o">&lt;&lt;</span> <span class="nb">self</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">allowed</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">subject</span><span class="p">)</span>
</span><span class='line'>      <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># method 2</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Ability</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">allowed</span><span class="p">(</span><span class="n">user</span><span class="p">,</span><span class="n">subject</span><span class="p">)</span>
</span><span class='line'>    <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Always sexy validations</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">validates</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'><span class="n">validates</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span> <span class="nb">format</span><span class="p">:</span> <span class="p">{</span> <span class="ss">with</span><span class="p">:</span> <span class="sr">/\A([^@\s]+)@((?:[-a-z0-9]+\.)+[a-z]{2,})\Z/</span> <span class="p">}</span>
</span><span class='line'><span class="n">validates</span> <span class="ss">:bio</span><span class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span class="p">{</span> <span class="ss">within</span><span class="p">:</span> <span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">255</span> <span class="p">}</span>
</span><span class='line'><span class="n">validates</span> <span class="ss">:extern_uid</span><span class="p">,</span> <span class="n">allow_blank</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span> <span class="ss">uniqueness</span><span class="p">:</span> <span class="p">{</span><span class="ss">scope</span><span class="p">:</span> <span class="ss">:provider</span><span class="p">}</span>
</span><span class='line'><span class="n">validates</span> <span class="ss">:projects_limit</span><span class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span> <span class="ss">numericality</span><span class="p">:</span> <span class="p">{</span><span class="n">greater_than_or_equal_to</span><span class="p">:</span> <span class="mi">0</span><span class="p">}</span>
</span><span class='line'><span class="n">validates</span> <span class="ss">:username</span><span class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span> <span class="ss">uniqueness</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span>
</span><span class='line'>          <span class="ss">exclusion</span><span class="p">:</span> <span class="p">{</span> <span class="k">in</span><span class="p">:</span> <span class="ss">Gitlab</span><span class="p">:</span><span class="ss">:Blacklist</span><span class="o">.</span><span class="n">path</span> <span class="p">},</span>
</span><span class='line'>          <span class="nb">format</span><span class="p">:</span> <span class="p">{</span> <span class="ss">with</span><span class="p">:</span> <span class="ss">Gitlab</span><span class="p">:</span><span class="ss">:Regex</span><span class="o">.</span><span class="n">username_regex</span><span class="p">,</span>
</span><span class='line'>                    <span class="ss">message</span><span class="p">:</span> <span class="s2">&quot;only letters, digits &amp; &#39;_&#39; &#39;-&#39; &#39;.&#39; allowed. Letter should be first&quot;</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">validate</span> <span class="ss">:namespace_uniq</span><span class="p">,</span> <span class="k">if</span><span class="p">:</span> <span class="o">-&gt;</span><span class="p">(</span><span class="n">user</span><span class="p">)</span> <span class="p">{</span> <span class="n">user</span><span class="o">.</span><span class="n">username_changed?</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Delgate method</h3>

<p>Reference <a href="http://www.simonecarletti.com/blog/2009/12/inside-ruby-on-rails-delegate/">delegate in rails</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Post</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:user</span>
</span><span class='line'>  <span class="n">delegate</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:to</span> <span class="o">=&gt;</span> <span class="ss">:user</span><span class="p">,</span> <span class="ss">:allow_nil</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">,</span> <span class="ss">:prefix</span> <span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class='line'>  <span class="n">delegate</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:to</span> <span class="o">=&gt;</span> <span class="ss">:user</span><span class="p">,</span> <span class="ss">:allow_nil</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">,</span> <span class="ss">:prefix</span> <span class="o">=&gt;</span> <span class="s2">&quot;author&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">User</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:posts</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># You can call it in Post instance</span>
</span><span class='line'><span class="n">post</span> <span class="o">=</span> <span class="no">Post</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">param</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="n">post</span><span class="o">.</span><span class="n">user_name</span> <span class="c1"># return user&#39;s name</span>
</span><span class='line'><span class="n">post</span><span class="o">.</span><span class="n">author_name</span> <span class="c1"># return user&#39; name</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Some basics i didn&#8217;t mention before.</h2>

<h3>object.map(&amp;:foo)</h3>

<p>Below are equivalent.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Base</span> <span class="o">=</span> <span class="no">Struct</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:name</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">tag1</span> <span class="o">=</span> <span class="no">Base</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s1">&#39;hello&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">tag2</span> <span class="o">=</span> <span class="no">Base</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s1">&#39;bye&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">result</span> <span class="o">=</span> <span class="o">[</span><span class="n">tag1</span><span class="p">,</span> <span class="n">tag2</span><span class="o">].</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">tag</span><span class="o">|</span> <span class="n">tag</span><span class="o">.</span><span class="n">name</span> <span class="p">}</span>
</span><span class='line'><span class="n">result</span> <span class="o">=</span> <span class="o">[</span><span class="n">tag1</span><span class="p">,</span> <span class="n">tag2</span><span class="o">].</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:name</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>send</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># These statements are equal</span>
</span><span class='line'><span class="vi">@person</span><span class="o">.</span><span class="n">age</span>
</span><span class='line'><span class="vi">@person</span><span class="o">.</span><span class="n">send</span> <span class="ss">:age</span>
</span><span class='line'>
</span><span class='line'><span class="vi">@person</span><span class="o">.</span><span class="n">age</span> <span class="o">=</span> <span class="mi">5</span>
</span><span class='line'><span class="vi">@person</span><span class="o">.</span><span class="n">send</span> <span class="ss">:age</span><span class="o">=</span><span class="p">,</span> <span class="mi">5</span>
</span><span class='line'>
</span><span class='line'><span class="vi">@person</span><span class="o">.</span><span class="n">set_age</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
</span><span class='line'><span class="vi">@person</span><span class="o">.</span><span class="n">send</span> <span class="ss">:set_age</span><span class="p">,</span> <span class="mi">5</span>
</span></code></pre></td></tr></table></div></figure>


<h3>content_for ( yield )</h3>

<p>Learned from Xdite&#8217;s <a href="http://blog.xdite.net/posts/2013/10/31/maintainable-rails-view-3">Maintainable Rails View</a></p>

<figure class='code'><figcaption><span>layout.html.erb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># In your layout, you can put a sidebar with yield :sidebar</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">div</span> <span class="n">class</span><span class="o">=</span><span class="s2">&quot;main&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="sx">%= yield %&gt;</span>
</span><span class='line'><span class="sx">&lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sx">&lt;div class=</span><span class="s2">&quot;sidebar&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;%=</span> <span class="k">yield</span> <span class="ss">:sidebar</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span>xxx.html.erb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Use content_for :sidebar to render sidebar.</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">%= content_for :sidebar do %&gt;    </span>
</span><span class='line'><span class="sx">  &lt;%=</span> <span class="n">render</span> <span class="s2">&quot;ad/foo&quot;</span><span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">&lt;% end %&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>change entire layout</h3>

<p>Use <code>layout</code> to make profiles page use <em>profile</em> layout not <em>application</em> layout</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">ProfilesController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">layout</span> <span class="s1">&#39;profile&#39;</span>
</span><span class='line'>  <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>redirect from localhost/project/yyy.git to localhost/project/yyy</h3>

<figure class='code'><figcaption><span>application_controller.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">project</span>
</span><span class='line'>  <span class="k">if</span> <span class="nb">id</span> <span class="o">=~</span> <span class="sr">/\.git\Z/</span>
</span><span class='line'>    <span class="n">redirect_to</span> <span class="n">request</span><span class="o">.</span><span class="n">original_url</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/\.git\Z/</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">)</span> <span class="ow">and</span> <span class="k">return</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Good gems</h2>

<ol>
<li><a href="https://github.com/ctran/annotate_models">annotate</a>: add comments to your ActiveRecord models/specs/routes..rb</li>
<li><a href="https://github.com/michaeldv/awesome_print">awesome_print</a>: pretty print your ruby objects</li>
<li><a href="https://github.com/charliesome/better_errors">better_errors</a>: better error page for rails</li>
<li><a href="https://github.com/mbleigh/acts-as-taggable-on">acts-as-taggable-on</a>: a tagging plugin</li>
<li><a href="https://github.com/railsbp/rails_best_practices">rails_best_practices</a>: code metric tool for rails</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mongodb in rails4]]></title>
    <link href="http://weichienhung.github.io/blog/2013/10/25/mongodb-in-rails/"/>
    <updated>2013-10-25T23:53:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/10/25/mongodb-in-rails</id>
    <content type="html"><![CDATA[<p>In the past week i had tried <a href="http://www.mongodb.org">mongodb</a> in rails.
I rewrite my previous project <a href="https://github.com/weichienhung/money">money</a> to use mongodb instead of active record.
The source code is in branch <a href="https://github.com/weichienhung/money/tree/mongodb">money-mongodb</a>.
Here i record the steps of changing active record to mongodb</p>

<!-- more -->


<h3>Install mongodb</h3>

<p>I am using Mac OSX, very easy to install</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>brew install mongodb
</span></code></pre></td></tr></table></div></figure>


<p>Run mongodb in your shell</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>mongod
</span></code></pre></td></tr></table></div></figure>


<h3>Update Gemfile</h3>

<p>I choose <em>mongoid</em> gem because it has good documents and it&#8217;s a object document mapper framework.
I am familiar with SQL so i could catch up NonSQL database easily.<br/>
Need to add <code>github: 'mongoid/mongoid'</code> because Rails4.</p>

<figure class='code'><figcaption><span>Gemfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;mongoid&#39;</span><span class="p">,</span> <span class="ss">github</span><span class="p">:</span> <span class="s1">&#39;mongoid/mongoid&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Generate mongoid config</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rails g mongoid:config
</span></code></pre></td></tr></table></div></figure>


<h3>Mark active record related codes</h3>

<p>In <em>application.rb</em> mark the <code>require rails/all</code> and add below.</p>

<figure class='code'><figcaption><span>application.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># require &#39;rails/all&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;action_controller/railtie&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;action_mailer/railtie&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;sprockets/railtie&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;rails/test_unit/railtie&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>In <em>development.rb</em> mark the <code>config.active_record.migration_error = :page_load</code></p>

<figure class='code'><figcaption><span>development.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># config.active_record.migration_error = :page_load</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Re-generate devise</h3>

<p>Mark <code>devise_for :users</code> in routes.rb</p>

<figure class='code'><figcaption><span>routes.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># devise_for :users</span>
</span></code></pre></td></tr></table></div></figure>


<p>Execute <code>devise:install</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rails g devise:install
</span></code></pre></td></tr></table></div></figure>


<p>Remember to unmark <code>devise_for</code> after new user.rb created.
New <em>user.rb</em> looks like below, it includes <code>Mongoid::Document</code>.</p>

<figure class='code'><figcaption><span>user.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">User</span>
</span><span class='line'>  <span class="kp">include</span> <span class="ss">Mongoid</span><span class="p">:</span><span class="ss">:Document</span>
</span><span class='line'>  <span class="c1"># Include default devise modules. Others available are:</span>
</span><span class='line'>  <span class="c1"># :confirmable, :lockable, :timeoutable and :omniauthable</span>
</span><span class='line'>  <span class="n">devise</span> <span class="ss">:database_authenticatable</span><span class="p">,</span> <span class="ss">:registerable</span><span class="p">,</span>
</span><span class='line'>         <span class="ss">:recoverable</span><span class="p">,</span> <span class="ss">:rememberable</span><span class="p">,</span> <span class="ss">:trackable</span><span class="p">,</span> <span class="ss">:validatable</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">## Database authenticatable</span>
</span><span class='line'>  <span class="n">field</span> <span class="ss">:email</span><span class="p">,</span>              <span class="ss">:type</span> <span class="o">=&gt;</span> <span class="nb">String</span><span class="p">,</span> <span class="ss">:default</span> <span class="o">=&gt;</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'>  <span class="n">field</span> <span class="ss">:encrypted_password</span><span class="p">,</span> <span class="ss">:type</span> <span class="o">=&gt;</span> <span class="nb">String</span><span class="p">,</span> <span class="ss">:default</span> <span class="o">=&gt;</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Update models</h3>

<p>Bascially we just need to include <code>Mongoid::Document</code> and add <code>field</code></p>

<figure class='code'><figcaption><span>category.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># class Category &lt; ActiveRecord::Base</span>
</span><span class='line'><span class="c1"># end</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Category</span>
</span><span class='line'>  <span class="kp">include</span> <span class="ss">Mongoid</span><span class="p">:</span><span class="ss">:Document</span>
</span><span class='line'>  <span class="n">field</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">type</span><span class="p">:</span> <span class="nb">String</span>
</span><span class='line'>  <span class="n">field</span> <span class="ss">:cid</span><span class="p">,</span> <span class="ss">type</span><span class="p">:</span> <span class="nb">Integer</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Update logic of querying data in model</h3>

<p>This is the most difficult part.  Model has methods to query data from database.
All need to rewrite.</p>

<p>No <code>where.not</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># scope :expense, -&gt; { where.not(category_id: 0) }</span>
</span><span class='line'><span class="n">scope</span> <span class="ss">:expense</span><span class="p">,</span> <span class="o">-&gt;</span> <span class="p">{</span> <span class="n">where</span><span class="p">(</span><span class="ss">:category_id</span><span class="o">.</span><span class="n">gt</span> <span class="o">=&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Order by</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># where.order(&#39;month ASC&#39;)</span>
</span><span class='line'><span class="n">where</span><span class="o">.</span><span class="n">asc</span><span class="p">(</span><span class="ss">:month</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Query condition.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#r = where(&#39;year = ?&#39;, params[:y])</span>
</span><span class='line'><span class="n">r</span> <span class="o">=</span> <span class="n">where</span><span class="p">(</span><span class="ss">year</span><span class="p">:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:y</span><span class="o">]</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>No <code>group()</code>. Need to use map/reduce funciton. Good <a href="http://www.mongovue.com/2010/11/03/yet-another-mongodb-map-reduce-tutorial/#comment-117">tutorial</a>.<br/>
For instance: calculate each month&#8217;s total cost.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># r.expense.group(:month).select(:month, &#39;sum(amount) as total&#39;)</span>
</span><span class='line'><span class="n">map</span> <span class="o">=</span> <span class="sx">%Q(</span>
</span><span class='line'><span class="sx">  function(){</span>
</span><span class='line'><span class="sx">    emit(this.month, { month:this.month, amount:this.amount});</span>
</span><span class='line'><span class="sx">  }</span>
</span><span class='line'><span class="sx">)</span>
</span><span class='line'><span class="n">reduce</span> <span class="o">=</span> <span class="sx">%Q(</span>
</span><span class='line'><span class="sx">  function(key, values) {</span>
</span><span class='line'><span class="sx">    var result = { month: 0, total: 0 };</span>
</span><span class='line'><span class="sx">    values.forEach(function(value) {</span>
</span><span class='line'><span class="sx">      result.month = value.month;</span>
</span><span class='line'><span class="sx">      if (value.amount)</span>
</span><span class='line'><span class="sx">        result.total += value.amount;</span>
</span><span class='line'><span class="sx">      else</span>
</span><span class='line'><span class="sx">        result.total += value.total;</span>
</span><span class='line'><span class="sx">      });</span>
</span><span class='line'><span class="sx">    return result;</span>
</span><span class='line'><span class="sx">  }</span>
</span><span class='line'><span class="sx">)</span>
</span><span class='line'><span class="n">final</span> <span class="o">=</span> <span class="sx">%Q(</span>
</span><span class='line'><span class="sx">  function(key, value) {</span>
</span><span class='line'><span class="sx">    if (value.amount)</span>
</span><span class='line'><span class="sx">      value.total = value.amount</span>
</span><span class='line'><span class="sx">    return value;</span>
</span><span class='line'><span class="sx">  }</span>
</span><span class='line'><span class="sx">)</span>
</span><span class='line'><span class="n">result</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'><span class="n">where</span><span class="p">(</span><span class="ss">year</span><span class="p">:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:y</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">map_reduce</span><span class="p">(</span><span class="n">map</span><span class="p">,</span> <span class="n">reduce</span><span class="p">)</span><span class="o">.</span><span class="n">out</span><span class="p">(</span><span class="ss">inline</span><span class="p">:</span> <span class="kp">true</span><span class="p">)</span><span class="o">.</span><span class="n">finalize</span><span class="p">(</span><span class="n">final</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">document</span><span class="o">|</span>
</span><span class='line'>  <span class="n">result</span><span class="o">.</span><span class="n">push</span> <span class="nb">self</span><span class="o">.</span><span class="n">build_money_record_by_month</span><span class="p">(</span><span class="n">document</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Fecth data from reduced document.
If there&#8217;s more easy way to fetch data from <code>document</code>, plz let me know.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">build_money_record_by_month</span><span class="p">(</span><span class="n">document</span><span class="p">)</span>
</span><span class='line'>  <span class="n">value</span> <span class="o">=</span> <span class="n">document</span><span class="o">.</span><span class="n">fetch</span> <span class="s1">&#39;value&#39;</span>
</span><span class='line'>  <span class="n">monny</span> <span class="o">=</span> <span class="no">MoneyRecord</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>  <span class="n">monny</span><span class="o">.</span><span class="n">total</span> <span class="o">=</span> <span class="n">value</span><span class="o">.</span><span class="n">fetch</span> <span class="s1">&#39;total&#39;</span>
</span><span class='line'>  <span class="n">monny</span><span class="o">.</span><span class="n">month</span> <span class="o">=</span> <span class="n">value</span><span class="o">.</span><span class="n">fetch</span> <span class="s1">&#39;month&#39;</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">monny</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Update cucumber and rspec testing</h3>

<p>In <em>spec/spec_help.rb</em></p>

<figure class='code'><figcaption><span>spec_help.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># mark below </span>
</span><span class='line'><span class="c1"># config.fixture_path = &quot;#{::Rails.root}/spec/fixtures&quot;</span>
</span><span class='line'><span class="c1"># config.use_transactional_fixtures = true</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># unmark below</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">before</span><span class="p">(</span><span class="ss">:suite</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>  <span class="no">DatabaseCleaner</span><span class="o">.</span><span class="n">strategy</span> <span class="o">=</span> <span class="ss">:truncation</span> <span class="c1"># must be truncation</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">before</span><span class="p">(</span><span class="ss">:each</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>  <span class="no">DatabaseCleaner</span><span class="o">.</span><span class="n">start</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">after</span><span class="p">(</span><span class="ss">:each</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>  <span class="no">DatabaseCleaner</span><span class="o">.</span><span class="n">clean</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>In <em>feature/env/rb</em></p>

<figure class='code'><figcaption><span>env.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">begin</span>
</span><span class='line'>  <span class="no">DatabaseCleaner</span><span class="o">.</span><span class="n">strategy</span> <span class="o">=</span> <span class="ss">:truncation</span>  <span class="c1"># must be truncation</span>
</span><span class='line'><span class="k">rescue</span> <span class="no">NameError</span>
</span><span class='line'>  <span class="k">raise</span> <span class="s2">&quot;You need to add database_cleaner to your Gemfile (in the :test group) if you wish to use it.&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>That&#8217;s it. But i still have a question not solved. During my trying the mongod process was crash easily and no idea why.
Error log like below.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>Wed Oct 23 00:37:28.314 Invalid access at address: 0x10 from thread: conn5
</span><span class='line'>
</span><span class='line'>Wed Oct 23 00:37:28.314 Got signal: 11 <span class="o">(</span>Segmentation fault: 11<span class="o">)</span>.
</span><span class='line'>
</span><span class='line'>Wed Oct 23 00:37:28.380 Backtrace:
</span><span class='line'>0x100a3eaf0 0x1005515bd 0x1005518f8 0x7fff8904a90a 0 0x100b70cc7 0x100c3e2c9 0x100c3e131 0x1009f873b 0x1009f85ff 0x1009f32c2 0x1009f3093 0x1009f2c0f 0x100699c7d 0x1006a484c 0x1006c72f5 0x1006c82b3 0x1006c9096 0x1007dec8d 0x1007e50a8
</span><span class='line'> 0   mongod                              0x0000000100a3eaf0 _ZN5mongo15printStackTraceERSo + 64
</span><span class='line'> 1   mongod                              0x00000001005515bd _ZN5mongo10abruptQuitEi + 397
</span><span class='line'> 2   mongod                              0x00000001005518f8 _ZN5mongo24abruptQuitWithAddrSignalEiP9__siginfoPv + 344
</span><span class='line'> 3   libsystem_c.dylib                   0x00007fff8904a90a _sigtramp + 26
</span><span class='line'> 4   ???                                 0x0000000000000000 0x0 + 0
</span><span class='line'> 5   mongod                              0x0000000100b70cc7 _ZN2v88internal15DeoptimizerDataD1Ev + 55
</span><span class='line'> 6   mongod                              0x0000000100c3e2c9 _ZN2v88internal7Isolate6DeinitEv + 105
</span><span class='line'> 7   mongod                              0x0000000100c3e131 _ZN2v88internal7Isolate8TearDownEv + 81
</span><span class='line'> 8   mongod                              0x00000001009f873b _ZN5mongo7V8ScopeD2Ev + 267
</span><span class='line'> 9   mongod                              0x00000001009f85ff _ZN5mongo7V8ScopeD0Ev + 15
</span><span class='line'> 10  mongod
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[design pattern in javascript]]></title>
    <link href="http://weichienhung.github.io/blog/2013/10/19/design-pattern-in-javascript/"/>
    <updated>2013-10-19T14:50:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/10/19/design-pattern-in-javascript</id>
    <content type="html"><![CDATA[<p>I read the <a href="http://addyosmani.com/resources/essentialjsdesignpatterns/book/">javascript design pattern</a> from Addy Osmani.
There&#8217;re code examples in the book and i try to re-write it by coffeescript.
It helps me understand pattern more and clear. During writing i found a good coffeescript <a href="http://coffeescriptcookbook.com">cookbook</a> and very helpful.
Some coffeescript syntax are learned.</p>

<h3>loop a array from middle</h3>

<p>Usually we use below to iter a array</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nv">myarray = </span><span class="p">[</span><span class="mi">1</span><span class="p">..</span><span class="mi">5</span><span class="p">]</span>
</span><span class='line'><span class="k">for</span> <span class="nx">element</span> <span class="k">in</span> <span class="nx">myarray</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span> <span class="nx">element</span> <span class="c1"># output 1~5</span>
</span></code></pre></td></tr></table></div></figure>


<p>Can strat from index 2, index is from 0. Means from third element</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="k">for</span> <span class="nx">index</span> <span class="k">in</span> <span class="p">[</span><span class="mi">2</span><span class="p">...</span><span class="nx">myarray</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span> <span class="nx">myarray</span><span class="p">[</span><span class="nx">index</span><span class="p">]</span> <span class="c1"># output 3~5</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Ternary opeartor</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span> <span class="k">if</span> <span class="mi">10</span><span class="o">&gt;</span><span class="mi">5</span> <span class="o">?</span> <span class="s">&quot;hi&quot;</span> <span class="o">:</span> <span class="s">&quot;bye&quot;</span> <span class="c1"># Compile ERROR</span>
</span><span class='line'>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span> <span class="k">if</span> <span class="mi">10</span><span class="o">&gt;</span><span class="mi">5</span> <span class="k">then</span> <span class="s">&quot;hi&quot;</span> <span class="k">else</span> <span class="s">&quot;bye&quot;</span> <span class="c1"># output hi</span>
</span></code></pre></td></tr></table></div></figure>


<h3>set value using ?=</h3>

<p>If you use <code>?=</code> you have to declare &#8216;instance = null&#8217; first.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nv">instance = </span><span class="kc">null</span> <span class="c1"># without this, Compile ERROR</span>
</span><span class='line'><span class="nx">instance</span> <span class="o">?=</span> <span class="s">&quot;abc&quot;</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span> <span class="nx">instance</span> <span class="c1"># output abc</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># the old way.</span>
</span><span class='line'><span class="nv">instance2 = </span><span class="nx">instance2</span> <span class="o">||</span> <span class="s">&quot;abc&quot;</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span> <span class="nx">instance2</span> <span class="c1"># output abc</span>
</span></code></pre></td></tr></table></div></figure>


<p>I put the final result to <a href="https://gist.github.com/weichienhung/7055412">gist</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Testing,Documentation and others]]></title>
    <link href="http://weichienhung.github.io/blog/2013/10/13/testing/"/>
    <updated>2013-10-13T19:38:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/10/13/testing</id>
    <content type="html"><![CDATA[<p>Past two weeks, i have studied some useful gems in rails. Here are the summary and tips.</p>

<h2><a href="https://github.com/cucumber/cucumber-rails">Cucumber</a></h2>

<p>Cucumber is the Behavior Driven Development(BDD). Writing testing is the most important in software development.
Without testing case it&#8217;s hard to refactor any code in the future.</p>

<p>For instance: my site provide REST API with JSON and require devise login to use.
How to test?<br/>
Add to Gemfile. Suggest to use rspec and factory_gril gems together.</p>

<figure class='code'><figcaption><span>Gemfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">group</span> <span class="ss">:test</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s2">&quot;rspec-rails&quot;</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;cucumber-rails&#39;</span><span class="p">,</span> <span class="ss">:require</span> <span class="o">=&gt;</span> <span class="kp">false</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s2">&quot;factory_girl_rails&quot;</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;database_cleaner&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">group</span> <span class="ss">:development</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s2">&quot;rspec-rails&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Run <code>rails g cucumber:install</code> to initial features/ structure.</p>

<!--more-->


<p>Modify <em>config/initializers/devise.rb</em> if you use devise and need to test sign_out function.</p>

<figure class='code'><figcaption><span>devise.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">sign_out_via</span> <span class="o">=</span> <span class="no">Rails</span><span class="o">.</span><span class="n">env</span><span class="o">.</span><span class="n">test?</span> <span class="p">?</span> <span class="ss">:get</span> <span class="p">:</span> <span class="ss">:delete</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create <em>api.feature</em> in features/. You should describe your feature by plain english.</p>

<figure class='code'><figcaption><span>api.feature</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">Feature</span><span class="p">:</span> <span class="no">Provide</span> <span class="no">API</span>
</span><span class='line'>  <span class="no">In</span> <span class="n">order</span> <span class="n">to</span> <span class="n">show</span> <span class="n">list</span>
</span><span class='line'>  <span class="no">As</span> <span class="n">an</span> <span class="no">Frontend</span> <span class="n">javascript</span>
</span><span class='line'>  <span class="no">Should</span> <span class="n">be</span> <span class="n">able</span> <span class="n">to</span> <span class="n">retrieve</span> <span class="n">data</span> <span class="n">through</span> <span class="no">REST</span> <span class="no">API</span>
</span><span class='line'>
</span><span class='line'>  <span class="ss">Scenario</span><span class="p">:</span> <span class="n">list</span> <span class="n">category</span> <span class="n">through</span> <span class="no">REST</span> <span class="no">API</span>
</span><span class='line'>    <span class="no">Given</span> <span class="n">I</span> <span class="n">exist</span> <span class="n">as</span> <span class="n">a</span> <span class="n">user</span> <span class="ow">and</span> <span class="n">logged</span> <span class="k">in</span>
</span><span class='line'>      <span class="no">And</span> <span class="n">the</span> <span class="nb">system</span> <span class="n">knows</span> <span class="n">about</span> <span class="n">the</span> <span class="n">following</span> <span class="n">category</span>
</span><span class='line'>       <span class="o">|</span> <span class="mi">1</span> <span class="o">|</span> <span class="err">食</span> <span class="o">|</span>
</span><span class='line'>       <span class="o">|</span> <span class="mi">2</span> <span class="o">|</span> <span class="err">交際娛樂</span> <span class="o">|</span>
</span><span class='line'>       <span class="o">|</span> <span class="mi">3</span> <span class="o">|</span> <span class="err">交通</span> <span class="o">|</span>
</span><span class='line'>    <span class="no">When</span> <span class="n">I</span> <span class="nb">send</span> <span class="n">a</span> <span class="no">GET</span> <span class="n">request</span> <span class="n">to</span> <span class="n">category</span> <span class="n">api</span>
</span><span class='line'>    <span class="no">Then</span> <span class="n">should</span> <span class="n">response</span> <span class="n">correct</span> <span class="n">category</span> <span class="no">JSON</span> <span class="n">data</span>
</span><span class='line'>      <span class="s2">&quot;&quot;&quot;</span>
</span><span class='line'><span class="s2">      {&quot;</span><span class="n">monny</span><span class="s2">&quot;:[{&quot;</span><span class="n">cid</span><span class="s2">&quot;:1,&quot;</span><span class="nb">name</span><span class="s2">&quot;:&quot;</span><span class="err">食</span><span class="s2">&quot;},</span>
</span><span class='line'><span class="s2">      {&quot;</span><span class="n">cid</span><span class="s2">&quot;:2,&quot;</span><span class="nb">name</span><span class="s2">&quot;:&quot;</span><span class="err">交際娛樂</span><span class="s2">&quot;},</span>
</span><span class='line'><span class="s2">      {&quot;</span><span class="n">cid</span><span class="s2">&quot;:3,&quot;</span><span class="nb">name</span><span class="s2">&quot;:&quot;</span><span class="err">交通</span><span class="s2">&quot;}]}</span>
</span><span class='line'><span class="s2">      &quot;&quot;&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create <em>api_steps.rb</em> in features/step_definitions/ and <em>users.rb</em> in spec/factories/.</p>

<figure class='code'><figcaption><span>api_steps.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">create_user</span>
</span><span class='line'>  <span class="vi">@user</span> <span class="o">=</span> <span class="no">FactoryGirl</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">sign_in</span>
</span><span class='line'>  <span class="n">visit</span> <span class="s1">&#39;/users/sign_in&#39;</span>
</span><span class='line'>  <span class="n">fill_in</span> <span class="s2">&quot;user_email&quot;</span><span class="p">,</span> <span class="ss">:with</span> <span class="o">=&gt;</span> <span class="vi">@user</span><span class="o">[</span><span class="ss">:email</span><span class="o">]</span>
</span><span class='line'>  <span class="n">fill_in</span> <span class="s2">&quot;user_password&quot;</span><span class="p">,</span> <span class="ss">:with</span> <span class="o">=&gt;</span> <span class="vi">@user</span><span class="o">[</span><span class="ss">:password</span><span class="o">]</span>
</span><span class='line'>  <span class="n">click_button</span> <span class="s2">&quot;Sign in&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Given</span> <span class="sr">/^I exist as a user and logged in$/</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">create_user</span>
</span><span class='line'>  <span class="n">sign_in</span>
</span><span class='line'>  <span class="n">page</span><span class="o">.</span><span class="n">should</span> <span class="n">have_content</span> <span class="s2">&quot;Signed in successfully.&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">And</span> <span class="sr">/^the system knows about the following category$/</span> <span class="k">do</span> <span class="o">|</span><span class="n">table</span><span class="o">|</span>
</span><span class='line'>  <span class="n">table</span><span class="o">.</span><span class="n">raw</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">cid</span><span class="p">,</span> <span class="nb">name</span><span class="o">|</span>
</span><span class='line'>    <span class="no">Category</span><span class="o">.</span><span class="n">create</span><span class="p">({</span><span class="ss">cid</span><span class="p">:</span> <span class="n">cid</span><span class="p">,</span> <span class="nb">name</span><span class="p">:</span> <span class="nb">name</span><span class="p">})</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">When</span> <span class="sr">/^I send a GET request to category api$/</span> <span class="k">do</span>
</span><span class='line'>  <span class="vi">@response</span> <span class="o">=</span> <span class="n">page</span><span class="o">.</span><span class="n">driver</span><span class="o">.</span><span class="n">get</span> <span class="n">api_category_path</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Then</span> <span class="sr">/^should response correct category JSON data$/</span> <span class="k">do</span> <span class="o">|</span><span class="n">expect</span><span class="o">|</span>
</span><span class='line'>  <span class="n">actual</span> <span class="o">=</span> <span class="no">JSON</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="vi">@response</span><span class="o">.</span><span class="n">body</span><span class="p">)</span>
</span><span class='line'>  <span class="n">expect</span> <span class="o">=</span> <span class="no">JSON</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="n">expect</span><span class="p">)</span>
</span><span class='line'>  <span class="n">expect</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">key</span><span class="p">,</span><span class="n">value</span><span class="o">|</span>
</span><span class='line'>    <span class="n">assert_equal</span> <span class="n">value</span><span class="p">,</span> <span class="n">actual</span><span class="o">[</span><span class="n">key</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span>users.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">FactoryGirl</span><span class="o">.</span><span class="n">define</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">factory</span> <span class="ss">:user</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">email</span> <span class="s1">&#39;a@a.com&#39;</span>
</span><span class='line'>    <span class="n">password</span> <span class="s1">&#39;a1234567&#39;</span>
</span><span class='line'>    <span class="n">confirmed_at</span> <span class="no">Time</span><span class="o">.</span><span class="n">now</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Here are some items should be take care.<br/>
1. Use capybara to visit <em>sign_in</em> page and click it to sign in<br/>
2. With <code>| name | yyy |</code>, you can pass a table into steps function. I use it to create Category.<br/>
3. Use <code>page.driver.get api_category_path</code> to send GET request with authentication session(Because you have sign in)<br/>
Run <em>cucumber</em> to test and get report.</p>

<h2><a href="https://github.com/ernie/ransack">Ransack</a></h2>

<p>Search your data in active record. I add the search function into <a href="https://github.com/weichienhung/rails101_groupme">rails101_groupme</a> project.
The usage is quite simple. The groupme site has a search field in the navigation bar to search all posts.<br/>
<img src="http://weichienhung.github.io/images/posts/20131013-groupme.png" width="500" height="500" title="groupme" alt="groupme">
Add a method in application_controller.rb because we have a search field in nav bar and every controller need to render it.</p>

<figure class='code'><figcaption><span>application_controller.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="c1"># exec set_search before_filter</span>
</span><span class='line'><span class="n">before_filter</span> <span class="ss">:set_search</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">set_search</span>
</span><span class='line'>  <span class="vi">@q</span> <span class="o">=</span> <span class="no">Post</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:q</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>Add controller to handle search request.</p>

<figure class='code'><figcaption><span>search_controller.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">SearchController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">search</span>
</span><span class='line'>    <span class="vi">@posts</span> <span class="o">=</span> <span class="vi">@q</span><span class="o">.</span><span class="n">result</span><span class="p">(</span><span class="ss">distinct</span><span class="p">:</span> <span class="kp">true</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Add search path in route. Only accepts post here.</p>

<figure class='code'><figcaption><span>routes.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="n">post</span> <span class="s1">&#39;search&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;search#search&#39;</span>
</span><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>Add search view. Ransack has <code>search_form_for</code> tag and it&#8217;s nice!</p>

<figure class='code'><figcaption><span>search.html.erb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= search_form_for @q, :class =</span><span class="o">&gt;</span> <span class="s2">&quot;navbar-form navbar-left&quot;</span><span class="p">,</span> <span class="ss">url</span><span class="p">:</span> <span class="n">search_path</span><span class="p">,</span> <span class="ss">html</span><span class="p">:</span> <span class="p">{</span> <span class="nb">method</span><span class="p">:</span> <span class="ss">:post</span> <span class="p">}</span>  <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;%= f.text_field :content_or_title_cont %&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">% end </span><span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>:content_or_title_cont</code> means we want to search content or title that matches search keyword.
If you want to search title column only, you should use <code>:title_cont</code>. <code>_cont</code> is necessary and means column&#8217;s content.
column name is the same with the active record you defined.</p>

<h2><a href="http://yardoc.org/">Yard</a></h2>

<p>Documentation is important. The Yard syntax is like Java and i like it.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># @author weichienhung</span>
</span><span class='line'><span class="c1"># Get places data belong to the category.  </span>
</span><span class='line'><span class="c1"># It uses _id_ from ApplicationController#params to query Place from Category.</span>
</span><span class='line'><span class="c1"># @return [JSON] the Place json format.</span>
</span><span class='line'><span class="k">def</span> <span class="nf">show</span>
</span><span class='line'>  <span class="k">begin</span>
</span><span class='line'>    <span class="vi">@category</span> <span class="o">=</span> <span class="no">Category</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>    <span class="n">respond_with</span> <span class="vi">@category</span><span class="o">.</span><span class="n">places</span>
</span><span class='line'>  <span class="k">rescue</span>
</span><span class='line'>    <span class="n">respond_with</span> <span class="o">[]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Yard supports markdown syntax in describe your method. <code>_id_</code> is the italic word in markdown.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[animated on media query]]></title>
    <link href="http://weichienhung.github.io/blog/2013/10/12/animated-on-media-query/"/>
    <updated>2013-10-12T14:44:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/10/12/animated-on-media-query</id>
    <content type="html"><![CDATA[<p>I see a post <a href="http://css-tricks.com/animated-media-queries/?utm_source=dlvr.it&amp;utm_medium=twitter">animated on media query</a> today.
It&#8217;s very interest to put CSS transition on media query changed. It&#8217;s a simple skill and i just try it on my blog.
You could resize my blog to check it.<br/>
For example: add width transition to my avatar.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nc">.myheader-avatar</span> <span class="o">&gt;</span> <span class="nt">img</span><span class="p">{</span>
</span><span class='line'>  <span class="k">height</span><span class="o">:</span> <span class="m">60px</span><span class="p">;</span>
</span><span class='line'>  <span class="k">width</span><span class="o">:</span> <span class="m">60px</span><span class="p">;</span>
</span><span class='line'>  <span class="k">float</span><span class="o">:</span> <span class="k">left</span><span class="p">;</span>
</span><span class='line'>  <span class="k">border</span><span class="o">-</span><span class="n">radius</span><span class="o">:</span> <span class="m">30px</span><span class="p">;</span>
</span><span class='line'>  <span class="o">@</span><span class="n">include</span> <span class="n">high_z_index</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c">/* New line. */</span>
</span><span class='line'>  <span class="n">transition</span><span class="o">:</span> <span class="k">width</span> <span class="m">1.5s</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@media</span> <span class="nt">screen</span> <span class="nt">and</span> <span class="o">(</span><span class="nt">max-width</span><span class="o">:</span> <span class="nt">700px</span><span class="o">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nc">.myheader-avatar</span> <span class="o">&gt;</span> <span class="nt">img</span> <span class="p">{</span>
</span><span class='line'>    <span class="c">/* When devie max-width under 700px, change width to 0 */</span>
</span><span class='line'>    <span class="k">height</span><span class="o">:</span> <span class="m">0</span><span class="p">;</span>
</span><span class='line'>    <span class="k">width</span><span class="o">:</span> <span class="m">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c">/* transition can&#39;t put on display. So i change it to set width=0 */</span>
</span><span class='line'>    <span class="c">/* display: none; */</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Originally i use <code>display:none</code> to hide avatar but it doesn&#8217;t work with transition. I use <code>width=0</code> insteadly.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Apply octopress new theme]]></title>
    <link href="http://weichienhung.github.io/blog/2013/09/29/apply-octopress-new-theme/"/>
    <updated>2013-09-29T15:04:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/09/29/apply-octopress-new-theme</id>
    <content type="html"><![CDATA[<p>I change octopress theme to <a href="http://zespia.tw/Octopress-Theme-Slash/index_tw.html">slash</a>.
I also do a little modification. like<br/>
1. Add avatar<br/>
2. Show site&#8217;s subtitle<br/>
3. Add <em>About</em> page and remove <em>Blog</em> page in the navigation header.<br/>
4. Modify CSS to fit mobile browing.<br/>
I feel whole site becomes beatiful and clear.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[String things in ruby]]></title>
    <link href="http://weichienhung.github.io/blog/2013/09/28/string-thing-in-ruby/"/>
    <updated>2013-09-28T22:21:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/09/28/string-thing-in-ruby</id>
    <content type="html"><![CDATA[<p>String alternatives in ruby</p>

<h3>%Q</h3>

<p>Alternative for double-quoted strings. Below are equivalent</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">name_of_object</span> <span class="o">=</span> <span class="s2">&quot;John&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="sx">%Q(Hello World </span><span class="si">#{</span><span class="n">name_of_object</span><span class="si">}</span><span class="sx">)</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Hello World John&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>You could replace <code>(</code> and <code>)</code> with non-alphanumeric characters.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">puts</span> <span class="sx">%Q!Hello World!</span>
</span><span class='line'><span class="nb">puts</span> <span class="sx">%Q[Hello World]</span>
</span><span class='line'><span class="nb">puts</span> <span class="sx">%Q+Hello World+</span>
</span><span class='line'><span class="nb">puts</span> <span class="sx">%/Hello World/</span> <span class="c1"># you can use also.</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<h3>%q</h3>

<p>Alternative for single-quoted strings. But it can&#8217;t do expression substitution</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">puts</span> <span class="sx">%q(Hello World #{name_of_object})</span> <span class="c1"># output: Hello World #{name_of_object}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>%W</h3>

<p>Used for double-quoted array.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">world</span> <span class="o">=</span> <span class="s2">&quot;World&quot;</span>
</span><span class='line'><span class="sx">%W(Hello </span><span class="si">#{</span><span class="n">world</span><span class="si">}</span><span class="sx"> John\ Smile)</span> <span class="c1"># output: [&quot;Hello&quot;, &quot;World&quot;, &quot;John Smile&quot;]</span>
</span></code></pre></td></tr></table></div></figure>


<h3>%w</h3>

<p>Used for single-quoted array. No expression substitution</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sx">%w(Hello #{world} Good)</span> <span class="c1"># output: [&quot;Hello&quot;, &quot;#{world}&quot;, &quot;Good&quot;]</span>
</span></code></pre></td></tr></table></div></figure>


<h3>%s</h3>

<p>Used for symbols. No expression substitution.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sx">%s(foo)</span> <span class="c1"># output: :foo</span>
</span><span class='line'><span class="sx">%s(foo bar)</span> <span class="c1"># output: :&quot;foo bar&quot;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails Generator and Gem]]></title>
    <link href="http://weichienhung.github.io/blog/2013/09/28/rails-generator-in-gem/"/>
    <updated>2013-09-28T20:52:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/09/28/rails-generator-in-gem</id>
    <content type="html"><![CDATA[<p>Recently i created two emberjs-rails projects.(<a href="https://github.com/weichienhung/money">money</a>,<a href="https://github.com/weichienhung/food-ntpc">food-ntpc</a>).
Everytime i have to create a new rails project and add gems(ember-rails,twitter-bootstrap,thin&#8230;) repeatedly. Based on DRY principle i try to write a gem to solve trivials.<br/>
Finally, my first gem <a href="http://rubygems.org/gems/railsone">railsone</a> is out and push to RubyGems. There are many Rail proper nouns like Generator,Template,Plugins,Engine.
In the beginning it&#8217;s very confuse to me but i have solved them luckly :)</p>

<h3>How to make gem and generator?</h3>

<!-- more -->


<p>Use bundler to create gem structure. <em>railsone</em> is my gem name.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>bundle gem railsone
</span></code></pre></td></tr></table></div></figure>


<p>It create structure like below</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>railsone/lib/
</span><span class='line'>railsone/lib/railsone.rb
</span><span class='line'>railsone/lib/railsone/version.rb
</span><span class='line'>railsone/railsone.gemspec
</span><span class='line'>railsone/Gemfile
</span><span class='line'>railsone/Rakefile
</span></code></pre></td></tr></table></div></figure>


<p>Edit <em>railsone.gemspec</em>. We should finish <code>TODO</code> parts.</p>

<figure class='code'><figcaption><span>railsone.gemspec</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="n">spec</span><span class="o">.</span><span class="n">description</span>   <span class="o">=</span> <span class="sx">%q{Railsone helps you create emberjs 1.0 with twitter bootstrap 3.0}</span>
</span><span class='line'><span class="n">spec</span><span class="o">.</span><span class="n">summary</span>       <span class="o">=</span> <span class="sx">%q{Create emberjs with twitter bootstrap}</span>
</span><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then create a file in <em>lib/railsone/generators/install_generator.rb</em>. It&#8217;s better to put my custom generator in a generators folder.</p>

<figure class='code'><figcaption><span>railsone.gemspec</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">vim</span> <span class="n">railsone</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">railsone</span><span class="o">/</span><span class="n">generators</span><span class="o">/</span><span class="n">install_generator</span><span class="o">.</span><span class="n">rb</span>
</span></code></pre></td></tr></table></div></figure>


<p>Next the default auto generated file is in <em>lib/railsone.rb</em>. We should modify it to require my generator file.</p>

<figure class='code'><figcaption><span>railsone.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s2">&quot;railsone/version&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;railsone/generators/install_generator&quot;</span> <span class="c1"># require my custom generator.</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">Railsone</span>
</span><span class='line'>  <span class="c1"># Your code goes here...</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now continue to finish our <em>install_generator.rb</em></p>

<figure class='code'><figcaption><span>railsone.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;rails/generators&#39;</span> <span class="c1"># require rails&#39;s generator</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">Railsone</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">Generators</span>
</span><span class='line'>    <span class="k">class</span> <span class="nc">InstallGenerator</span> <span class="o">&lt;</span> <span class="o">::</span><span class="ss">Rails</span><span class="p">:</span><span class="ss">:Generators</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>      <span class="n">desc</span> <span class="s2">&quot;generator to create emberjs and twitter bootstrap&quot;</span> <span class="c1"># description when you type rails g railsone:install --help</span>
</span><span class='line'>
</span><span class='line'>      <span class="nb">self</span><span class="o">.</span><span class="n">source_paths</span> <span class="o">&lt;&lt;</span> <span class="no">File</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="bp">__FILE__</span><span class="p">),</span> <span class="s1">&#39;../../../templates&#39;</span><span class="p">)</span> <span class="c1"># source_paths is for external files</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">def</span> <span class="nf">example_cmd</span>
</span><span class='line'>        <span class="n">gem</span> <span class="s1">&#39;ember-rails&#39;</span>
</span><span class='line'>        <span class="n">remove_file</span> <span class="s1">&#39;app/assets/javascripts/application.js&#39;</span>
</span><span class='line'>        <span class="n">copy_file</span> <span class="s1">&#39;application.js&#39;</span><span class="p">,</span> <span class="s1">&#39;app/assets/javascripts/application.js&#39;</span>
</span><span class='line'>        <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Your generator may use external files and they should be searched by <code>source_paths</code>. I create a <em>templates</em> folder to place files. It&#8217;s under root folder.</p>

<figure class='code'><figcaption><span>folder_structure</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>railsone/lib/
</span><span class='line'>railsone/templates/
</span></code></pre></td></tr></table></div></figure>


<p>Any public method in your generator will be executed automatically. It means <code>example_cmd</code> will be executed when you execute generator.<br/>
Directive <code>gem 'ember-rails'</code> means add <em>gem &#8216;ember-rails&#8217;</em> into Gemfile. All commands can be found in <a href="http://guides.rubyonrails.org/generators.html">RubyGuides</a> and <a href="http://rdoc.info/github/wycats/thor/master/Thor/Actions.html">Thor:Action</a>.<br/>
Directive <code>copy_file</code> copy my custom application.js<em>(in templates/application.js)</em> to overwrite project&#8217;s application.js<em>(in app/assets/javascripts/application.js)</em>.</p>

<h3>How to test?</h3>

<p>Before push to RubyGems, we should do a minimal testing. Create a new rails project.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rails new myrails
</span></code></pre></td></tr></table></div></figure>


<p>Assume your <em>myrails</em> and <em>railsone</em> are in the same folder</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>railsone/
</span><span class='line'>myrails/
</span></code></pre></td></tr></table></div></figure>


<p>Add <em>railsone</em> to your myrails&#8217;s Gemfile</p>

<figure class='code'><figcaption><span>Gemfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;railsone&#39;</span><span class="p">,</span> <span class="ss">path</span><span class="p">:</span> <span class="s1">&#39;../railsone&#39;</span>
</span><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>Execute railsone generator. <em>railsone</em> is our namespace and <em>install</em> is our generator name.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd </span>myrails/
</span><span class='line'>rails g railsone:install
</span></code></pre></td></tr></table></div></figure>


<p>Then your will find your myrails Gemfile and application.js are changed.</p>

<h3>How to publish?</h3>

<p>Push to RubyGems is incrediblely simple. Refer to <a href="http://rubygems.org/">RubyGems</a>. <strong>Don&#8217;t forget to create your account first.</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># build your gem</span>
</span><span class='line'>gem build railsone.gemspec
</span><span class='line'>
</span><span class='line'><span class="c"># publish your gem</span>
</span><span class='line'>gem push railsone-0.0.1.gem
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Async in Emberjs]]></title>
    <link href="http://weichienhung.github.io/blog/2013/09/22/async-in-emberjs/"/>
    <updated>2013-09-22T17:40:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/09/22/async-in-emberjs</id>
    <content type="html"><![CDATA[<h2>Async Routing</h2>

<p>Reference to <a href="http://emberjs.com/guides/routing/asynchronous-routing/">ember guide</a>.<br/>
If you want to make sure model is ready before entering the target route. You could use async routing. How?<br/>
Make your model as Promise object in route&#8217;s model function.
For example: In year route i return a model that comes from <code>ModelMgr.listMonth(params.year_id)</code>.
Because model is Promise object, i add a <code>then</code> method to set id attribute to model(resolve will be model here)</p>

<figure class='code'><figcaption><span>YearRoute</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nv">model: </span><span class="nf">(params) -&gt;</span>
</span><span class='line'>  <span class="nv">model = </span><span class="nx">ModelMgr</span><span class="p">.</span><span class="nx">listMonth</span><span class="p">(</span><span class="nx">params</span><span class="p">.</span><span class="nx">year_id</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">model</span><span class="p">.</span><span class="nx">then</span> <span class="nf">(resolve, reject)-&gt;</span>
</span><span class='line'>      <span class="nx">resolve</span><span class="p">.</span><span class="nx">set</span> <span class="s">&#39;id&#39;</span><span class="p">,</span> <span class="nx">params</span><span class="p">.</span><span class="nx">year_id</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">model</span>
</span></code></pre></td></tr></table></div></figure>


<p>In <code>ModelMgr.listMonth</code> method, use <code>Ember.RSVP.Promise</code> to wrap your function. Because i don&#8217;t return anything in the last line of function.
CoffeeScript will return the promise object automatically. <code>months</code> will be the real model object.</p>

<figure class='code'><figcaption><span>ModelMgr</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nv">listMonth: </span><span class="nf">(year) -&gt;</span>
</span><span class='line'>  <span class="nv">months = </span><span class="nx">Ember</span><span class="p">.</span><span class="nx">ArrayProxy</span><span class="p">.</span><span class="nx">create</span><span class="p">({</span><span class="nx">content</span><span class="o">:</span><span class="p">[]})</span>
</span><span class='line'>  <span class="k">new</span> <span class="nx">Ember</span><span class="p">.</span><span class="nx">RSVP</span><span class="p">.</span><span class="nx">Promise</span> <span class="nf">(resolve) -&gt;</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span> <span class="s">&#39;/api/list&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nv">type: </span><span class="s">&#39;GET&#39;</span>
</span><span class='line'>    <span class="nv">dataType: </span><span class="s">&#39;json&#39;</span>
</span><span class='line'>    <span class="nv">data: </span><span class="s">&#39;y=&#39;</span><span class="o">+</span><span class="nx">year</span>
</span><span class='line'>    <span class="nv">success: </span><span class="nf">(data, textStatus, jqXHR) -&gt;</span>
</span><span class='line'>      <span class="k">for</span> <span class="nx">raw</span> <span class="k">in</span> <span class="nx">data</span>
</span><span class='line'>        <span class="nx">months</span><span class="p">.</span><span class="nx">addObject</span> <span class="nx">raw</span>
</span><span class='line'>      <span class="nx">months</span><span class="p">.</span><span class="nx">set</span> <span class="s">&#39;isReady&#39;</span><span class="p">,</span> <span class="kc">true</span>
</span><span class='line'>      <span class="nx">resolve</span><span class="p">(</span><span class="nx">months</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Wait multiple function call ready</h2>

<p>Sometimes you will use 3rd party library and it requires element existed in the DOM tree.
For example: I use highchartJS to draw diagram.<br/>
In the route it queries two models to finish the whole scenarios.
<code>model</code> is the result from <code>ModelMgr.listMonth</code> and <code>modelForTrend</code> is the result from <code>ModelMgr.queryTrend</code>.
The models all have attributes called <code>isReady</code> with false default. After <code>ModelMgr</code> get the data, it will set to true.</p>

<figure class='code'><figcaption><span>SummaryRoute</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'>  <span class="nv">model: </span><span class="nf">(params)-&gt;</span>
</span><span class='line'>    <span class="nv">model = </span><span class="nx">ModelMgr</span><span class="p">.</span><span class="nx">listMonth</span><span class="p">(</span><span class="nx">params</span><span class="p">.</span><span class="nx">year_id</span><span class="p">)</span>
</span><span class='line'>    <span class="nv">model.year = </span><span class="nx">params</span><span class="p">.</span><span class="nx">year_id</span> <span class="c1">#For queryTrend needs year as parameter</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">model</span>
</span><span class='line'>  <span class="nv">setupController: </span><span class="nf">(controller, model)-&gt;</span>
</span><span class='line'>    <span class="nv">modelForTrend = </span><span class="nx">ModelMgr</span><span class="p">.</span><span class="nx">queryTrend</span><span class="p">(</span><span class="nx">model</span><span class="p">.</span><span class="nx">year</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">controller</span><span class="p">.</span><span class="nx">set</span> <span class="s">&#39;model&#39;</span><span class="p">,</span> <span class="nx">model</span>
</span><span class='line'>    <span class="nx">controller</span><span class="p">.</span><span class="nx">set</span> <span class="s">&#39;modelForTrend&#39;</span><span class="p">,</span> <span class="nx">modelForTrend</span>
</span></code></pre></td></tr></table></div></figure>


<p>We have two attribute bindings to model&#8217;s attributes in controller.</p>

<figure class='code'><figcaption><span>SummaryController</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nv">SummaryController = </span><span class="nx">Ember</span><span class="p">.</span><span class="nx">ObjectController</span><span class="p">.</span><span class="nx">extend</span>
</span><span class='line'>  <span class="nv">dataReadyBinding: </span><span class="s">&#39;model.isReady&#39;</span>
</span><span class='line'>  <span class="nv">trendDataReadyBinding: </span><span class="s">&#39;modelForTrend.isReady&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create a method to observe all attributes we care about. View shouldn&#8217;t connect to Model directly.
So i make <code>drawLineChart</code> method to observe controller&#8217;s attribute.</p>

<figure class='code'><figcaption><span>SummaryView</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nv">SummaryView = </span><span class="nx">Ember</span><span class="p">.</span><span class="nx">View</span><span class="p">.</span><span class="nx">extend</span>
</span><span class='line'>  <span class="nv">elementReady: </span><span class="kc">false</span>
</span><span class='line'>  <span class="nv">drawLineChart: </span><span class="p">(</span> <span class="nf">-&gt;</span>
</span><span class='line'>    <span class="k">if</span> <span class="nx">@get</span><span class="p">(</span><span class="s">&#39;controller.dataReady&#39;</span><span class="p">)</span> <span class="o">and</span> <span class="nx">@get</span><span class="p">(</span><span class="s">&#39;controller.trendDataReady&#39;</span><span class="p">)</span> <span class="o">and</span> <span class="nx">@get</span><span class="p">(</span><span class="s">&#39;elementReady&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="nv">content = </span><span class="nx">@get</span> <span class="s">&#39;controller.model.content&#39;</span> <span class="c1"># content is ready</span>
</span><span class='line'>      <span class="nv">contentForTrend = </span><span class="nx">@get</span> <span class="s">&#39;controller.modelForTrend.content&#39;</span> <span class="c1"># contentForTrend is ready</span>
</span><span class='line'>      <span class="nx">$</span><span class="p">(</span><span class="s">&#39;#myTrend&#39;</span><span class="p">).</span><span class="nx">highcharts</span><span class="p">(</span> <span class="p">...</span> <span class="p">)</span> <span class="c1"># element is ready.</span>
</span><span class='line'>      <span class="c1"># do something here...</span>
</span><span class='line'>  <span class="p">).</span><span class="nx">observes</span><span class="p">(</span><span class="s">&#39;controller.dataReady&#39;</span><span class="p">,</span> <span class="s">&#39;elementReady&#39;</span><span class="p">,</span> <span class="s">&#39;controller.trendDataReady&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="nv">didInsertElement: </span><span class="nf">-&gt;</span>
</span><span class='line'>    <span class="nx">@set</span> <span class="s">&#39;elementReady&#39;</span><span class="p">,</span> <span class="kc">true</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use HighchartJS to visual data]]></title>
    <link href="http://weichienhung.github.io/blog/2013/09/22/use-highchartjs-to-visual/"/>
    <updated>2013-09-22T17:16:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/09/22/use-highchartjs-to-visual</id>
    <content type="html"><![CDATA[<p>I just push a new project to <a href="https://github.com/weichienhung/money">github</a> and <a href="http://weichien-money.herokuapp.com/">heroku</a>.
This project is derived from my iOS App <a href="https://itunes.apple.com/tw/app/monny/id590327036?mt=8">Monny</a>.
The App I used it to record my daily expense. The free version doesn&#8217;t have visual graph to show summary data.
So i use EmberJS,HighchartJS and Rails to build this simple web app. I always learned new knowledge during coding.</p>

<p>I take few snaphots of this probject.</p>

<!-- more -->


<h3>List every record</h3>

<p><img src="http://weichienhung.github.io/images/posts/0922-list.png" width="500" height="500" title="list-image" alt="list"></p>

<h3>Category summary</h3>

<p><img src="http://weichienhung.github.io/images/posts/0922-summary.png" width="500" height="500" title="summary-image" alt="summary"></p>

<h3>Year trend</h3>

<p><img src="http://weichienhung.github.io/images/posts/0922-trend.png" width="500" height="500" title="trend-image" alt="trend"></p>

<p>I won&#8217;t describe studying notes here but write them in other posts.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ActionSupport in Rails4 part2]]></title>
    <link href="http://weichienhung.github.io/blog/2013/09/13/actionsupport-in-rails4-part2/"/>
    <updated>2013-09-13T21:42:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/09/13/actionsupport-in-rails4-part2</id>
    <content type="html"><![CDATA[<p>Continue ActionSupport useful record</p>

<h3>Extensions to Numeric</h3>

<hr />

<p>Defined in active_support/core_ext/numeric/bytes.rb.</p>

<h4>Bytes</h4>

<p>All number respond to these methods</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="mi">2</span><span class="o">.</span><span class="n">kilobytes</span>   <span class="c1"># =&gt; 2048</span>
</span><span class='line'><span class="mi">3</span><span class="o">.</span><span class="n">megabytes</span>   <span class="c1"># =&gt; 3145728</span>
</span><span class='line'><span class="mi">3</span><span class="o">.</span><span class="mi">5</span><span class="o">.</span><span class="n">gigabytes</span> <span class="c1"># =&gt; 3758096384</span>
</span><span class='line'><span class="o">-</span><span class="mi">4</span><span class="o">.</span><span class="n">exabytes</span>   <span class="c1"># =&gt; -4611686018427387904</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more-->


<hr />

<p>Defined in active_support/core_ext/numeric/time.rb.</p>

<h4>Time</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># equivalent to Time.current.advance(months: 1)</span>
</span><span class='line'><span class="mi">1</span><span class="o">.</span><span class="n">month</span><span class="o">.</span><span class="n">from_now</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># equivalent to Time.current.advance(years: 2)</span>
</span><span class='line'><span class="mi">2</span><span class="o">.</span><span class="n">years</span><span class="o">.</span><span class="n">from_now</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># equivalent to Time.current.advance(months: 4, years: 5)</span>
</span><span class='line'><span class="p">(</span><span class="mi">4</span><span class="o">.</span><span class="n">months</span> <span class="o">+</span> <span class="mi">5</span><span class="o">.</span><span class="n">years</span><span class="p">)</span><span class="o">.</span><span class="n">from_now</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Extensions to Integer</h3>

<hr />

<p>Defined in active_support/core_ext/integer/multiple.rb.</p>

<h4>multiple_of</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="mi">2</span><span class="o">.</span><span class="n">multiple_of?</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="c1"># =&gt; true</span>
</span><span class='line'><span class="mi">1</span><span class="o">.</span><span class="n">multiple_of?</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="c1"># =&gt; false</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Extensions to Enumerable</h3>

<hr />

<p>Defined in active_support/core_ext/enumerable.rb.</p>

<h4>sum</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="o">].</span><span class="n">sum</span> <span class="c1"># =&gt; 6</span>
</span><span class='line'><span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">100</span><span class="p">)</span><span class="o">.</span><span class="n">sum</span>  <span class="c1"># =&gt; 5050</span>
</span></code></pre></td></tr></table></div></figure>


<p>If a block is given, sum becomes an iterator that yields the elements of the collection and sums the returned values:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">5</span><span class="p">)</span><span class="o">.</span><span class="n">sum</span> <span class="p">{</span><span class="o">|</span><span class="n">n</span><span class="o">|</span> <span class="n">n</span> <span class="o">*</span> <span class="mi">2</span> <span class="p">}</span> <span class="c1"># =&gt; 30</span>
</span><span class='line'><span class="o">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">10</span><span class="o">].</span><span class="n">sum</span>    <span class="c1"># =&gt; 30</span>
</span></code></pre></td></tr></table></div></figure>


<h4>many?</h4>

<p>The method many? is shorthand for collection.size > 1:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">% if </span><span class="n">pages</span><span class="o">.</span><span class="n">many?</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;%= pagination_links %&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">% end </span><span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Extensions to Array</h3>

<hr />

<p>Defined in active_support/core_ext/array/access.rb.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sx">%w(a b c d)</span><span class="o">.</span><span class="n">to</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="c1"># =&gt; %w(a b c)</span>
</span><span class='line'><span class="o">[].</span><span class="n">to</span><span class="p">(</span><span class="mi">7</span><span class="p">)</span>          <span class="c1"># =&gt; []</span>
</span><span class='line'><span class="sx">%w(a b c d)</span><span class="o">.</span><span class="n">from</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>  <span class="c1"># =&gt; %w(c d)</span>
</span><span class='line'><span class="sx">%w(a b c d)</span><span class="o">.</span><span class="n">from</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="c1"># =&gt; []</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<p>Defined in active_support/core_ext/array/prepend_and_append.rb.</p>

<h4>prepend and append</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sx">%w(a b c d)</span><span class="o">.</span><span class="n">prepend</span><span class="p">(</span><span class="s1">&#39;e&#39;</span><span class="p">)</span>  <span class="c1"># =&gt; %w(e a b c d)</span>
</span><span class='line'><span class="o">[].</span><span class="n">prepend</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>            <span class="c1"># =&gt; [10]</span>
</span><span class='line'><span class="sx">%w(a b c d)</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s1">&#39;e&#39;</span><span class="p">)</span>  <span class="c1"># =&gt; %w(a b c d e)</span>
</span><span class='line'><span class="o">[].</span><span class="n">append</span><span class="p">(</span><span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="o">]</span><span class="p">)</span>         <span class="c1"># =&gt; [[1,2]]</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<p>Defined in active_support/core_ext/array/grouping.rb</p>

<h4>in_groups_of(number, fill_with = nil)</h4>

<p>The method in_groups_of splits an array into consecutive groups of a certain size.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="o">].</span><span class="n">in_groups_of</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="c1"># =&gt; [[1, 2], [3, nil]]</span>
</span><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="o">].</span><span class="n">in_groups_of</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="kp">false</span><span class="p">)</span> <span class="c1"># =&gt; [[1, 2], [3]]</span>
</span><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="o">].</span><span class="n">in_groups_of</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span> <span class="c1"># =&gt; [[1, 2], [3, 0]]</span>
</span></code></pre></td></tr></table></div></figure>


<h4>in_groups(number, fill_with = nil)</h4>

<p>The method in_groups splits an array into a certain number of groups.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sx">%w(1 2 3 4 5 6 7)</span><span class="o">.</span><span class="n">in_groups</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>
</span><span class='line'><span class="c1"># =&gt; [[&quot;1&quot;, &quot;2&quot;, &quot;3&quot;], [&quot;4&quot;, &quot;5&quot;, nil], [&quot;6&quot;, &quot;7&quot;, nil]]</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ActionSupport in Rails4 part1]]></title>
    <link href="http://weichienhung.github.io/blog/2013/09/12/actionsupport-methods-in-rails4/"/>
    <updated>2013-09-12T17:23:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/09/12/actionsupport-methods-in-rails4</id>
    <content type="html"><![CDATA[<p>Recently i study documents in <a href="http://edgeguides.rubyonrails.org/">ruby edgeguides</a>.
There are a lot of methods in ActionSupport chapter. I record something useful here and for reference in the future.</p>

<h3>Extensions to All Objects</h3>

<hr />

<p>Defined in active_support/core_ext/object/blank.rb.</p>

<h4>blank?</h4>

<p>Following vlaues are considered to be blank.<br/>
* nil and false<br/>
* strings composed only of whitespace (see note below)<br/>
* empty arrays and hashes<br/>
In particular, 0 and 0.0 are not blank.</p>

<!-- more-->


<h4>present?</h4>

<p>The method <code>present?</code> is equivalent to <code>!blank?</code></p>

<h4>presence</h4>

<p>Returns itself if present?, and nil otherwise. Useful</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">host</span> <span class="o">=</span> <span class="n">config</span><span class="o">[</span><span class="ss">:host</span><span class="o">].</span><span class="n">presence</span> <span class="o">||</span> <span class="s1">&#39;localhost&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<p>Defined in active_support/core_ext/object/duplicable.rb.</p>

<h4>duplicable?</h4>

<p>By definition all objects are duplicable? except nil, false, true, symbols, numbers, class, and module objects.</p>

<hr />

<p>Defined in active_support/core_ext/object/duplicable.rb.</p>

<h4>deep_dup</h4>

<p>Deep duplicate. Normally, <code>dup</code> an object that contains other objects, Ruby only creates a shallow copy of the object.</p>

<hr />

<p>Defined in active_support/core_ext/object/try.rb.</p>

<h4>try</h4>

<p>Try to call a method only if it is not nil</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># without try</span>
</span><span class='line'><span class="k">unless</span> <span class="vi">@number</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>  <span class="vi">@number</span><span class="o">.</span><span class="n">next</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># with try</span>
</span><span class='line'><span class="vi">@number</span><span class="o">.</span><span class="n">try</span><span class="p">(</span><span class="ss">:next</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>try can also be called without arguments but a block</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vi">@person</span><span class="o">.</span><span class="n">try</span> <span class="p">{</span> <span class="o">|</span><span class="n">person</span><span class="o">|</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">person</span><span class="o">.</span><span class="n">first_name</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="n">person</span><span class="o">.</span><span class="n">last_name</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<p>Defined in active_support/core_ext/object/with_options.rb.</p>

<h4>with_options</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Account</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:customers</span><span class="p">,</span> <span class="ss">dependent</span><span class="p">:</span> <span class="ss">:destroy</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:products</span><span class="p">,</span>  <span class="ss">dependent</span><span class="p">:</span> <span class="ss">:destroy</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:invoices</span><span class="p">,</span>  <span class="ss">dependent</span><span class="p">:</span> <span class="ss">:destroy</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:expenses</span><span class="p">,</span>  <span class="ss">dependent</span><span class="p">:</span> <span class="ss">:destroy</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># with options way</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Account</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">with_options</span> <span class="ss">dependent</span><span class="p">:</span> <span class="ss">:destroy</span> <span class="k">do</span> <span class="o">|</span><span class="n">assoc</span><span class="o">|</span>
</span><span class='line'>    <span class="n">assoc</span><span class="o">.</span><span class="n">has_many</span> <span class="ss">:customers</span>
</span><span class='line'>    <span class="n">assoc</span><span class="o">.</span><span class="n">has_many</span> <span class="ss">:products</span>
</span><span class='line'>    <span class="n">assoc</span><span class="o">.</span><span class="n">has_many</span> <span class="ss">:invoices</span>
</span><span class='line'>    <span class="n">assoc</span><span class="o">.</span><span class="n">has_many</span> <span class="ss">:expenses</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<p>Defined in active_support/core_ext/object/instance_variables.rb.</p>

<h4>instance_values</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">C</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@x</span><span class="p">,</span> <span class="vi">@y</span> <span class="o">=</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">C</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">instance_values</span> <span class="c1"># =&gt; {&quot;x&quot; =&gt; 0, &quot;y&quot; =&gt; 1}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>instance_variable_names</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">C</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@x</span><span class="p">,</span> <span class="vi">@y</span> <span class="o">=</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">C</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">instance_variable_names</span> <span class="c1"># =&gt; [&quot;@x&quot;, &quot;@y&quot;]</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<p>Defined in active_support/core_ext/object/inclusion.rb.</p>

<h4>in?</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="mi">1</span><span class="o">.</span><span class="n">in?</span><span class="p">(</span><span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="o">]</span><span class="p">)</span>        <span class="c1"># =&gt; true</span>
</span><span class='line'><span class="s2">&quot;lo&quot;</span><span class="o">.</span><span class="n">in?</span><span class="p">(</span><span class="s2">&quot;hello&quot;</span><span class="p">)</span>   <span class="c1"># =&gt; true</span>
</span><span class='line'><span class="mi">25</span><span class="o">.</span><span class="n">in?</span><span class="p">(</span><span class="mi">30</span><span class="o">.</span><span class="n">.</span><span class="mi">50</span><span class="p">)</span>      <span class="c1"># =&gt; false</span>
</span><span class='line'><span class="mi">1</span><span class="o">.</span><span class="n">in?</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>            <span class="c1"># =&gt; ArgumentError because argument passed does not respond to include?.</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Extensions to Module</h3>

<hr />

<p>Defined in active_support/core_ext/module/attr_internal.rb.</p>

<h4>Internal Attributes</h4>

<p>Active Support defines the macros attr_internal_reader, attr_internal_writer, and attr_internal_accessor
The macro attr_internal is a synonym for attr_internal_accessor:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># library</span>
</span><span class='line'><span class="k">class</span> <span class="nc">ThirdPartyLibrary</span><span class="o">::</span><span class="no">Crawler</span>
</span><span class='line'>  <span class="n">attr_internal</span> <span class="ss">:log_level</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># client code</span>
</span><span class='line'><span class="k">class</span> <span class="nc">MyCrawler</span> <span class="o">&lt;</span> <span class="ss">ThirdPartyLibrary</span><span class="p">:</span><span class="ss">:Crawler</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:log_level</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Extensions to String</h3>

<hr />

<p>Defined in active_support/core_ext/string/filters.rb.</p>

<h4>remove</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Hello</span> <span class="no">World</span><span class="s2">&quot;.remove(/Hello /) =&gt; &quot;</span><span class="no">World</span><span class="s2">&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>squish</h4>

<p>The method squish strips leading and trailing whitespace, and substitutes runs of whitespace with a single space each:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s2">&quot; </span><span class="se">\n</span><span class="s2">  foo</span><span class="se">\n\r</span><span class="s2"> </span><span class="se">\t</span><span class="s2"> bar </span><span class="se">\n</span><span class="s2">&quot;</span><span class="o">.</span><span class="n">squish</span> <span class="c1"># =&gt; &quot;foo bar&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>truncate</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s2">&quot;Oh dear! Oh dear! I shall be late!&quot;</span><span class="o">.</span><span class="n">truncate</span><span class="p">(</span><span class="mi">20</span><span class="p">)</span>
</span><span class='line'><span class="c1"># =&gt; &quot;Oh dear! Oh dear!...&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ellipsis can be customized with the :omission option</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s2">&quot;Oh dear! Oh dear! I shall be late!&quot;</span><span class="o">.</span><span class="n">truncate</span><span class="p">(</span><span class="mi">20</span><span class="p">,</span> <span class="ss">omission</span><span class="p">:</span> <span class="s1">&#39;&amp;hellip;&#39;</span><span class="p">)</span>
</span><span class='line'><span class="c1"># =&gt; &quot;Oh dear! Oh &amp;hellip;&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Note in particular that truncation takes into account the length of the omission string.
Pass a :separator to truncate the string at a natural break:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s2">&quot;Oh dear! Oh dear! I shall be late!&quot;</span><span class="o">.</span><span class="n">truncate</span><span class="p">(</span><span class="mi">18</span><span class="p">)</span>
</span><span class='line'><span class="c1"># =&gt; &quot;Oh dear! Oh dea...&quot;</span>
</span><span class='line'><span class="s2">&quot;Oh dear! Oh dear! I shall be late!&quot;</span><span class="o">.</span><span class="n">truncate</span><span class="p">(</span><span class="mi">18</span><span class="p">,</span> <span class="ss">separator</span><span class="p">:</span> <span class="s1">&#39; &#39;</span><span class="p">)</span>
</span><span class='line'><span class="c1"># =&gt; &quot;Oh dear! Oh...&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<p>Defined in active_support/core_ext/string/starts_ends_with.rb.</p>

<h4>starts_with? and ends_with?</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s2">&quot;foo&quot;</span><span class="o">.</span><span class="n">starts_with?</span><span class="p">(</span><span class="s2">&quot;f&quot;</span><span class="p">)</span> <span class="c1"># =&gt; true</span>
</span><span class='line'><span class="s2">&quot;foo&quot;</span><span class="o">.</span><span class="n">ends_with?</span><span class="p">(</span><span class="s2">&quot;o&quot;</span><span class="p">)</span>   <span class="c1"># =&gt; true</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<p>Defined in active_support/core_ext/string/access.rb.</p>

<h4>at(position)</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s2">&quot;hello&quot;</span><span class="o">.</span><span class="n">at</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>  <span class="c1"># =&gt; &quot;h&quot;</span>
</span><span class='line'><span class="s2">&quot;hello&quot;</span><span class="o">.</span><span class="n">at</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>  <span class="c1"># =&gt; &quot;o&quot;</span>
</span><span class='line'><span class="s2">&quot;hello&quot;</span><span class="o">.</span><span class="n">at</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="c1"># =&gt; &quot;o&quot;</span>
</span><span class='line'><span class="s2">&quot;hello&quot;</span><span class="o">.</span><span class="n">at</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="c1"># =&gt; nil</span>
</span></code></pre></td></tr></table></div></figure>


<h4>from(position)</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s2">&quot;hello&quot;</span><span class="o">.</span><span class="n">from</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>  <span class="c1"># =&gt; &quot;hello&quot;</span>
</span><span class='line'><span class="s2">&quot;hello&quot;</span><span class="o">.</span><span class="n">from</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>  <span class="c1"># =&gt; &quot;llo&quot;</span>
</span><span class='line'><span class="s2">&quot;hello&quot;</span><span class="o">.</span><span class="n">from</span><span class="p">(</span><span class="o">-</span><span class="mi">2</span><span class="p">)</span> <span class="c1"># =&gt; &quot;lo&quot;</span>
</span><span class='line'><span class="s2">&quot;hello&quot;</span><span class="o">.</span><span class="n">from</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="c1"># =&gt; &quot;&quot; if &lt; 1.9, nil in 1.9</span>
</span></code></pre></td></tr></table></div></figure>


<h4>to(position)</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s2">&quot;hello&quot;</span><span class="o">.</span><span class="n">to</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>  <span class="c1"># =&gt; &quot;h&quot;</span>
</span><span class='line'><span class="s2">&quot;hello&quot;</span><span class="o">.</span><span class="n">to</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>  <span class="c1"># =&gt; &quot;hel&quot;</span>
</span><span class='line'><span class="s2">&quot;hello&quot;</span><span class="o">.</span><span class="n">to</span><span class="p">(</span><span class="o">-</span><span class="mi">2</span><span class="p">)</span> <span class="c1"># =&gt; &quot;hell&quot;</span>
</span><span class='line'><span class="s2">&quot;hello&quot;</span><span class="o">.</span><span class="n">to</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="c1"># =&gt; &quot;hello&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<p>Defined in active_support/core_ext/string/conversions.rb.</p>

<h4>to_date, to_time, to_datetime</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s2">&quot;2010-07-27&quot;</span><span class="o">.</span><span class="n">to_date</span>              <span class="c1"># =&gt; Tue, 27 Jul 2010</span>
</span><span class='line'><span class="s2">&quot;2010-07-27 23:37:00&quot;</span><span class="o">.</span><span class="n">to_time</span>     <span class="c1"># =&gt; Tue Jul 27 23:37:00 UTC 2010</span>
</span><span class='line'><span class="s2">&quot;2010-07-27 23:37:00&quot;</span><span class="o">.</span><span class="n">to_datetime</span> <span class="c1"># =&gt; Tue, 27 Jul 2010 23:37:00 +0000</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&quot;2010-07-27 23:42:00&quot;</span><span class="o">.</span><span class="n">to_time</span><span class="p">(</span><span class="ss">:utc</span><span class="p">)</span>   <span class="c1"># =&gt; Tue Jul 27 23:42:00 UTC 2010</span>
</span><span class='line'><span class="s2">&quot;2010-07-27 23:42:00&quot;</span><span class="o">.</span><span class="n">to_time</span><span class="p">(</span><span class="ss">:local</span><span class="p">)</span> <span class="c1"># =&gt; Tue Jul 27 23:42:00 +0200 2010</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ckeditor with Rails4 on heroku]]></title>
    <link href="http://weichienhung.github.io/blog/2013/09/09/rails-and-heroku/"/>
    <updated>2013-09-09T22:32:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/09/09/rails-and-heroku</id>
    <content type="html"><![CDATA[<p>I push <a href="https://github.com/weichienhung/rails101_groupme">rails101_groupme</a> to <a href="http://weichien-groupme.herokuapp.com/">heroku</a> today.
The project doesn&#8217;t have access control and i18n. I use cancan gem to do access authorization and default i18n mechanism.
Besides, i also upgrade twitter bootstrap to 3.0.0.</p>

<!-- more -->


<p>When i push to heroku, i get stuck in ckeditor&#8217;s rails 4 compatibility and git issue. After googling i solve it finally.</p>

<h3>Fail to fetch gem from git</h3>

<p>Error message like this</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Fetching git@github.com:Compass/compass-rails.git
</span><span class='line'>Host key verification failed.
</span><span class='line'>fatal: The remote end hung up unexpectedly
</span><span class='line'>Git error: command `git clone 'git@github.com:Compass/compass-rails.git' "/tmp/build_1xa9</span></code></pre></td></tr></table></div></figure>


<p>Because git@github.com use SSH to communication, it requires authentication.
Your gemfile may contain some gems like</p>

<figure class='code'><figcaption><span>Old</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s2">&quot;compass-rails&quot;</span><span class="p">,</span> <span class="ss">:git</span> <span class="o">=&gt;</span> <span class="s2">&quot;git@github.com:Compass/compass-rails.git&quot;</span><span class="p">,</span> <span class="ss">:branch</span> <span class="o">=&gt;</span> <span class="s2">&quot;rails4&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Change to</p>

<figure class='code'><figcaption><span>New</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s2">&quot;compass-rails&quot;</span><span class="p">,</span> <span class="ss">:github</span> <span class="o">=&gt;</span> <span class="s2">&quot;Compass/compass-rails&quot;</span><span class="p">,</span> <span class="ss">:branch</span> <span class="o">=&gt;</span> <span class="s2">&quot;rails4&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Miss assets in rails 4</h3>

<p>Very helpful <a href="http://theotherzach.com/writes/2013/3/13/rails-4-and-heroku-missing-assets">link</a>. Put below in your production.rb</p>

<figure class='code'><figcaption><span>production.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">serve_static_assets</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Ckeditor doesn&#8217;t show correctly</h3>

<p>Reference to <a href="http://www.cnblogs.com/lmei/p/3306643.html">link</a> and <a href="http://dev.mensfeld.pl/2013/07/upgrading-to-rails-4-0-from-rails-3-2-test-case-part-ii-assets-models/">link2</a>.
Because ckeditor will read the assets file without digest postfix. My solution is<br/>
Add a rake file to create nondigest file of all ckeditor assets.</p>

<figure class='code'><figcaption><span>ckeditor.rake</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;fileutils&#39;</span>
</span><span class='line'><span class="n">desc</span> <span class="s2">&quot;Create nondigest versions of all ckeditor digest assets&quot;</span>
</span><span class='line'><span class="n">task</span> <span class="ss">ckeditor</span><span class="p">:</span> <span class="ss">:environment</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">fingerprint</span> <span class="o">=</span> <span class="sr">/\-[0-9a-f]{32}\./</span>
</span><span class='line'>  <span class="k">for</span> <span class="n">file</span> <span class="k">in</span> <span class="no">Dir</span><span class="o">[</span><span class="s2">&quot;public/assets/ckeditor/**/*&quot;</span><span class="o">]</span>
</span><span class='line'>    <span class="k">next</span> <span class="k">unless</span> <span class="n">file</span> <span class="o">=~</span> <span class="n">fingerprint</span>
</span><span class='line'>    <span class="n">nondigest</span> <span class="o">=</span> <span class="n">file</span><span class="o">.</span><span class="n">sub</span> <span class="n">fingerprint</span><span class="p">,</span> <span class="s1">&#39;.&#39;</span>
</span><span class='line'>    <span class="no">FileUtils</span><span class="o">.</span><span class="n">cp</span> <span class="n">file</span><span class="p">,</span> <span class="n">nondigest</span><span class="p">,</span> <span class="ss">verbose</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Execute <code>rake ckeditor</code> after <code>rake assets:precompile</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake assets:precompile
</span><span class='line'>rake ckeditor
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[First ember_rails project]]></title>
    <link href="http://weichienhung.github.io/blog/2013/09/03/first-ember-rails-project/"/>
    <updated>2013-09-03T23:57:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/09/03/first-ember-rails-project</id>
    <content type="html"><![CDATA[<p>Last time i said i want to make an ember-rails project(<a href="http://127.0.0.1:4000/blog/2013/08/25/rails-and-ember-study/">post</a>).
Today I push my first Ember-Rails(food-ntpc) project to <a href="https://github.com/weichienhung/food-ntpc">github</a> and <a href="http://food-ntpc.herokuapp.com/">heroku</a>.
It takes me more time to finish it because i am not familiar with coffee script. I also create a new <a href="http://weichienhung.github.io/blog/2013/09/01/coffee-script-memo/">post</a> for coffee script memo.
During practicing i use Emberjs 1.0.0.rc7. But Emberjs 1.0.0 was released few days ago and i upgrade it to 1.0.0.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Multiple models in a view]]></title>
    <link href="http://weichienhung.github.io/blog/2013/09/01/multiple-model-in-a-view/"/>
    <updated>2013-09-01T20:29:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/09/01/multiple-model-in-a-view</id>
    <content type="html"><![CDATA[<p>How to use multiple models in a view?
Retrieve another data and set to controller in Route&#8217;s setupController method.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nv">model: </span><span class="nf">-&gt;</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">Place</span><span class="p">.</span><span class="nx">places</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="nv">setupController: </span><span class="nf">(controller, model) -&gt;</span>
</span><span class='line'>  <span class="c1">#model is the result of Place.places()</span>
</span><span class='line'>  <span class="nx">controller</span><span class="p">.</span><span class="nx">set</span> <span class="s">&#39;content&#39;</span><span class="p">,</span> <span class="nx">model</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">#another data</span>
</span><span class='line'>  <span class="nv">categorys = </span><span class="nx">Category</span><span class="p">.</span><span class="nx">categorys</span><span class="p">()</span>
</span><span class='line'>  <span class="nx">controller</span><span class="p">.</span><span class="nx">set</span> <span class="s">&#39;categorys&#39;</span><span class="p">,</span> <span class="nx">categorys</span>
</span></code></pre></td></tr></table></div></figure>


<p>I create CategoryView and bind data to it in template</p>

<pre>
&#123;{#each category in categorys}}
  &#123;{#view CategoryView contentBinding="category"}}
    &#123;{category.name}}
  &#123;{/view}}
&#123;{/each}}

&#123;{#each place in content}}
  &#123;{place.name}}
&#123;{/each}}
</pre>


<p>CategoryView code:
I use classNameBinding to auto update class when status is changed.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nv">CategoryView = </span><span class="nx">Ember</span><span class="p">.</span><span class="nx">View</span><span class="p">.</span><span class="nx">extend</span>
</span><span class='line'>  <span class="nv">classNameBindings: </span><span class="p">[</span><span class="s">&#39;getClass&#39;</span><span class="p">]</span>
</span><span class='line'>  <span class="nv">status: </span><span class="kc">true</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">getClass: </span><span class="p">(</span> <span class="nf">-&gt;</span>
</span><span class='line'>    <span class="k">if</span> <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s">&#39;status&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">return</span> <span class="s">&quot;btn-info&quot;</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="k">return</span> <span class="s">&quot;btn-default&quot;</span>
</span><span class='line'>  <span class="p">).</span><span class="nx">property</span><span class="p">(</span><span class="s">&#39;status&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Coffee script memo]]></title>
    <link href="http://weichienhung.github.io/blog/2013/09/01/coffee-script-memo/"/>
    <updated>2013-09-01T16:35:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/09/01/coffee-script-memo</id>
    <content type="html"><![CDATA[<p>From last week i tried the Ember-Rails and studied the coffee script btw. Because more and more people use coffee script and i want to understand their codes!
In the beginning the coffee script syntax confuses me a lot and cost a lot of time to google it.
I decide to keep it on post for reference in the future.</p>

<!--more-->


<p>The indent is the most important to coffeescript. Wrong indent cause compile fail.
For example: define a method to call ajax. You can insert variable into string using <code>"#{}"</code>. <code>@successHandle</code> invoke the another method inside ajax scope</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nv">getData: </span><span class="nf">-&gt;</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span> <span class="s">&#39;/api/post/&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nv">type: </span><span class="s">&#39;GET&#39;</span>
</span><span class='line'>    <span class="nv">dataType: </span><span class="s">&#39;json&#39;</span>
</span><span class='line'>    <span class="nv">success: </span><span class="nf">(data, textStatus, jqXHR) -&gt;</span>
</span><span class='line'>      <span class="nx">@successHandle</span> <span class="nx">data</span>
</span><span class='line'>
</span><span class='line'>    <span class="nv">successHandle: </span><span class="nf">(data) -&gt;</span>
</span><span class='line'>      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span> <span class="s">&quot;success </span><span class="si">#{</span><span class="nx">data</span><span class="si">}</span><span class="s">&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Pass a string and function. For example: listen a click event</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nx">button</span><span class="p">.</span><span class="nx">addListener</span> <span class="s">&#39;click&#39;</span><span class="p">,()</span> <span class="nf">-&gt;</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span> <span class="s">&#39;btn click&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Iterate a hash object</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nv">hashobject =</span>
</span><span class='line'>  <span class="nv">name: </span><span class="s">&#39;ben&#39;</span>
</span><span class='line'>  <span class="nv">address: </span><span class="s">&#39;xxxxx&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="nx">key</span><span class="p">,</span> <span class="nx">value</span> <span class="k">of</span> <span class="nx">hashobject</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span> <span class="nx">key</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span> <span class="nx">value</span>
</span></code></pre></td></tr></table></div></figure>


<p>All variable definition will be scoped in function. If you want to def a variable in each loop, you should use <code>do () -&gt;</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nv">check = </span><span class="p">()</span> <span class="nf">-&gt;</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">person</span> <span class="k">in</span> <span class="nx">people</span>
</span><span class='line'>    <span class="nv">post = </span><span class="k">new</span> <span class="nx">Post</span><span class="p">()</span>
</span><span class='line'>    <span class="nx">person</span><span class="p">.</span><span class="nx">setPost</span> <span class="nx">post</span>
</span><span class='line'><span class="c1">#every person has the same post reference</span>
</span><span class='line'>
</span><span class='line'><span class="nv">check = </span><span class="p">()</span> <span class="nf">-&gt;</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">person</span> <span class="k">in</span> <span class="nx">people</span>
</span><span class='line'>    <span class="nx">do</span> <span class="nf">(person) -&gt;</span>
</span><span class='line'>      <span class="nv">post = </span><span class="k">new</span> <span class="nx">Post</span><span class="p">()</span>
</span><span class='line'>      <span class="nx">person</span><span class="p">.</span><span class="nx">setPost</span> <span class="nx">post</span>
</span><span class='line'><span class="c1">#every person has his post</span>
</span></code></pre></td></tr></table></div></figure>


<p>Timeout syntax</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nx">setTimeout</span> <span class="p">(</span><span class="nf">-&gt;</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span> <span class="s">&quot;hello world&quot;</span>
</span><span class='line'><span class="p">),</span> <span class="mi">100</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails and ember study]]></title>
    <link href="http://weichienhung.github.io/blog/2013/08/25/rails-and-ember-study/"/>
    <updated>2013-08-25T07:13:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/08/25/rails-and-ember-study</id>
    <content type="html"><![CDATA[<p>I pushed two project(<a href="https://github.com/weichienhung/rails101_groupme">rails101-groupme</a>,<a href="https://github.com/weichienhung/project101">project101</a>)to github yesterday.
I bought the ebook <a href="http://rails-101.logdown.com/">rails101</a> and make rails101-groupme project by follow instructions of book.
Besides i add some features into rails101-groupme.<br/>
1.Every user could reply the post<br/>
2.Rich text editor, CKeditor</p>

<p><a href="https://github.com/weichienhung/project101">project101</a> is the old project i practiced emberjs. It retrieves data from <a href="http://data.taipei.gov.tw/">open data Taipei</a> and show on table.
This project was made because inspired by yunglinho&#8217;s <a href="http://blog.yunglinho.com/blog/2011/11/15/">post</a>. I study google map API and add into it recently.
Most of locations could be show on google map. Somes are not because can&#8217;t be geocode to <a href="https://developers.google.com/maps/documentation/javascript/reference#LatLng">LatLng</a>.
There&#8217;s a disadvantage here. Geocode needs to send requests to google but google will block it if you use API frequently. Implement it on clide side is not a good idea.
I am planing to have a new project that use Rails and Emberjs. I could add my json API and store LatLng in database to prevent too many requests to google.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Improve sublime]]></title>
    <link href="http://weichienhung.github.io/blog/2013/08/19/improve-sublime/"/>
    <updated>2013-08-19T23:16:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/08/19/improve-sublime</id>
    <content type="html"><![CDATA[<p>I install new Color Schemes,Theme,package to sublime and make it&#8217;s look and feel better. Here is the list i have added.</p>

<h3>1.indent Guide</h3>

<p>Make your current indent with different color. Open <code>Preferences</code> > <code>Settings - Default</code> and add <code>draw_active</code> to <code>indent_guide_options</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="err">...</span>
</span><span class='line'><span class="s2">&quot;indent_guide_options&quot;</span><span class="err">:</span> <span class="p">[</span><span class="s2">&quot;draw_normal&quot;</span><span class="p">,</span><span class="s2">&quot;draw_active&quot;</span><span class="p">]</span><span class="err">,</span>
</span><span class='line'><span class="err">...</span>
</span></code></pre></td></tr></table></div></figure>


<p>You could change the color of draw_active. Open your current color scheme setting file.
Add</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;dict&gt;</span>
</span><span class='line'>  <span class="nt">&lt;key&gt;</span>settings<span class="nt">&lt;/key&gt;</span>
</span><span class='line'>  <span class="nt">&lt;dict&gt;</span>
</span><span class='line'>    ...
</span><span class='line'>    ...
</span><span class='line'>    <span class="nt">&lt;key&gt;</span>activeGuide<span class="nt">&lt;/key&gt;</span>
</span><span class='line'>    <span class="nt">&lt;string&gt;</span>#CED418<span class="nt">&lt;/string&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/dict&gt;</span>
</span><span class='line'><span class="nt">&lt;/dict&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<!-- more -->


<h3>2.Soda-theme</h3>

<p>Folow <a href="https://github.com/buymeasoda/soda-theme/">soda-theme</a> to install. After installation done, you have to enable it in <code>Preferences</code> > <code>Settings - User</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'> &quot;theme&quot;:&quot;Soda Light.sublime-theme&quot;
</span></code></pre></td></tr></table></div></figure>


<h3>3.KeymapManager</h3>

<p>The easy way to show all your shortcut key. Good for me. You can use <code>Package Control</code> > <code>Install Package</code> > <code>KeymapManager</code> to install it.</p>

<h3>4.Tomorrow Theme</h3>

<p>The most beautiful color scheme. Use <code>Package Control</code> > <code>Install Package</code> > <code>Tomorrow - Theme</code> to install.
I prefer the Tomorrow-Night-Eighties theme</p>

<h3>5. All autocomplete</h3>

<p>Auto complete in every opening tab.
Use <code>Package Control</code> > <code>Install Package</code> > <code>All Autocomplete</code></p>

<h3>6. Better your default setting</h3>

<p><code>Preferences</code> > <code>Settings -&gt; Default</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="err">...</span>
</span><span class='line'><span class="err">//Change</span> <span class="err">tab</span> <span class="err">to</span> <span class="err">spaces</span> <span class="err">and</span> <span class="err">set</span> <span class="err">size</span>
</span><span class='line'><span class="s2">&quot;tab_size&quot;</span><span class="err">:</span> <span class="mi">2</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;translate_tabs_to_spaces&quot;</span><span class="err">:</span> <span class="kc">true</span><span class="err">,</span>
</span><span class='line'>
</span><span class='line'><span class="err">//Highlight</span> <span class="err">the</span> <span class="err">current</span> <span class="err">line</span>
</span><span class='line'><span class="s2">&quot;highlight_line&quot;</span><span class="err">:</span> <span class="kc">true</span><span class="err">,</span>
</span><span class='line'>
</span><span class='line'><span class="err">//Highlight</span> <span class="err">the</span> <span class="err">modified</span> <span class="err">tab</span>
</span><span class='line'><span class="s2">&quot;highlight_modified_tabs&quot;</span><span class="err">:</span> <span class="kc">true</span><span class="err">,</span>
</span><span class='line'>
</span><span class='line'><span class="err">//</span> <span class="err">bold</span> <span class="err">the</span> <span class="err">folder</span>
</span><span class='line'><span class="s2">&quot;bold_folder_labels&quot;</span><span class="err">:</span> <span class="kc">true</span><span class="err">,</span>
</span><span class='line'>
</span><span class='line'><span class="err">...</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails on heroku]]></title>
    <link href="http://weichienhung.github.io/blog/2013/08/15/rails-on-heroku/"/>
    <updated>2013-08-15T10:39:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/08/15/rails-on-heroku</id>
    <content type="html"><![CDATA[<p>I pushed <a href="https://github.com/weichienhung/bookmarks-rails">bookmarks-rails</a> project to <a href="https://www.heroku.com/">Heroku</a> yesterday.
Thanks to <a href="http://railsapps.github.io/rails-heroku-tutorial.html">tutorial</a> i don&#8217;t have too many troblem during upload to Heroku.
Some parts of doc are out of dated and here i write down the steps for reference myself in the future.</p>

<!--more-->


<ol>
<li>install heroku toolbelt from <a href="https://toolbelt.heroku.com">heroku</a></li>
<li>heroku doesn&#8217;t support sqllite3, modify sqllite3 to postgres sql</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;sqllite3&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>to</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">group</span> <span class="ss">:development</span><span class="p">,</span> <span class="ss">:test</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;sqlite3&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">group</span> <span class="ss">:production</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;pg&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>3.use <code>thin</code> as production webserver</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">group</span> <span class="ss">:production</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;thin&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>run <code>bundle install --without production</code></li>
<li>In Rails 3.x precompile your assets file, you have to add <code>config.assets.initialize_on_precompile=false</code> to your <code>config/application.rb</code>. Rails 4 ignore this.</li>
<li>run <code>rake assets:precompile RAILS_ENV=production</code></li>
<li>set <code>config.serve_static_assets = true</code> in your <code>production.rb</code> because we use rails to serve static assets</li>
<li>run <code>git commit -am "your commit message"</code> because only commited source code will be pushed to heroku.</li>
<li>run <code>heroku create appname</code> to create your app on heroku. It requires you input your account,password and your ssh public key(id_rsa).</li>
<li>run <code>git push heroku master</code>. You will see your app running on http://appname.herokuapp.com.
Heroku will modify your production datbase connection in database.yml when push to heroku. You don&#8217;t need to put the production setting your database.yml.</li>
<li>run <code>heroku run rake db:migrate</code> to create db on heroku</li>
</ol>


<h2>trouble shooting</h2>

<p>If you use Twitter Bootstrap, you have to comment out favicon related codes in your application.html.erb.  Or you will fail to push to heroku.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;!--</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="sx">%= favicon_link_tag &#39;apple-touch-icon-precomposed.png&#39;, :rel =</span><span class="o">&gt;</span> <span class="s1">&#39;apple-touch-icon-precomposed&#39;</span><span class="p">,</span> <span class="ss">:type</span> <span class="o">=&gt;</span> <span class="s1">&#39;image/png&#39;</span> <span class="sx">%&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sx">  &lt;%= favicon_link_tag &#39;favicon.ico&#39;, :rel =&gt;</span> <span class="s1">&#39;shortcut icon&#39;</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">--&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you modify the app name on Heroku web site, you should remove your remote branch and re-add.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">remote</span> <span class="n">rm</span> <span class="n">oldname</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">remote</span> <span class="n">add</span> <span class="n">newname</span> <span class="n">git</span><span class="vi">@herokuapp</span><span class="o">.</span><span class="n">com</span><span class="ss">:yourapp</span><span class="o">.</span><span class="n">git</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
