<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Weichien Hung's studying note]]></title>
  <link href="http://weichienhung.github.io/atom.xml" rel="self"/>
  <link href="http://weichienhung.github.io/"/>
  <updated>2013-09-28T22:41:33+08:00</updated>
  <id>http://weichienhung.github.io/</id>
  <author>
    <name><![CDATA[Weichien Hung]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[String things in ruby]]></title>
    <link href="http://weichienhung.github.io/blog/2013/09/28/string-thing-in-ruby/"/>
    <updated>2013-09-28T22:21:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/09/28/string-thing-in-ruby</id>
    <content type="html"><![CDATA[<p>String alternatives in ruby</p>

<h3>%Q</h3>

<p>Alternative for double-quoted strings. Below are equivalent</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">name_of_object</span> <span class="o">=</span> <span class="s2">&quot;John&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="sx">%Q(Hello World </span><span class="si">#{</span><span class="n">name_of_object</span><span class="si">}</span><span class="sx">)</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Hello World John&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>You could replace <code>(</code> and <code>)</code> with non-alphanumeric characters.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">puts</span> <span class="sx">%Q!Hello World!</span>
</span><span class='line'><span class="nb">puts</span> <span class="sx">%Q[Hello World]</span>
</span><span class='line'><span class="nb">puts</span> <span class="sx">%Q+Hello World+</span>
</span><span class='line'><span class="nb">puts</span> <span class="sx">%/Hello World/</span> <span class="c1"># you can use also.</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<h3>%q</h3>

<p>Alternative for single-quoted strings. But it can&#8217;t do expression substitution</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">puts</span> <span class="sx">%q(Hello World #{name_of_object})</span> <span class="c1"># output: Hello World #{name_of_object}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>%W</h3>

<p>Used for double-quoted array.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">world</span> <span class="o">=</span> <span class="s2">&quot;World&quot;</span>
</span><span class='line'><span class="sx">%W(Hello </span><span class="si">#{</span><span class="n">world</span><span class="si">}</span><span class="sx"> John\ Smile)</span> <span class="c1"># output: [&quot;Hello&quot;, &quot;World&quot;, &quot;John Smile&quot;]</span>
</span></code></pre></td></tr></table></div></figure>


<h3>%w</h3>

<p>Used for single-quoted array. No expression substitution</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sx">%w(Hello #{world} Good)</span> <span class="c1"># output: [&quot;Hello&quot;, &quot;#{world}&quot;, &quot;Good&quot;]</span>
</span></code></pre></td></tr></table></div></figure>


<h3>%s</h3>

<p>Used for symbols. No expression substitution.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sx">%s(foo)</span> <span class="c1"># output: :foo</span>
</span><span class='line'><span class="sx">%s(foo bar)</span> <span class="c1"># output: :&quot;foo bar&quot;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails Generator and Gem]]></title>
    <link href="http://weichienhung.github.io/blog/2013/09/28/rails-generator-in-gem/"/>
    <updated>2013-09-28T20:52:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/09/28/rails-generator-in-gem</id>
    <content type="html"><![CDATA[<p>Recently i created two emberjs-rails projects.(<a href="https://github.com/weichienhung/money">money</a>,<a href="https://github.com/weichienhung/food-ntpc">food-ntpc</a>).
Everytime i have to create a new rails project and add gems(ember-rails,twitter-bootstrap,thin&#8230;) repeatedly. Based on DRY principle i try to write a gem to solve trivials.<br/>
Finally, my first gem <a href="http://rubygems.org/gems/railsone">railsone</a> is out and push to RubyGems. There are many Rail proper nouns like Generator,Template,Plugins,Engine.
In the beginning it&#8217;s very confuse to me but i have solved them luckly :)</p>

<h3>How to make gem and generator?</h3>

<!-- more -->


<p>Use bundler to create gem structure. <em>railsone</em> is my gem name.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>bundle gem railsone
</span></code></pre></td></tr></table></div></figure>


<p>It create structure like below</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>railsone/lib/
</span><span class='line'>railsone/lib/railsone.rb
</span><span class='line'>railsone/lib/railsone/version.rb
</span><span class='line'>railsone/railsone.gemspec
</span><span class='line'>railsone/Gemfile
</span><span class='line'>railsone/Rakefile
</span></code></pre></td></tr></table></div></figure>


<p>Edit <em>railsone.gemspec</em>. We should finish <code>TODO</code> parts.</p>

<figure class='code'><figcaption><span>railsone.gemspec</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="n">spec</span><span class="o">.</span><span class="n">description</span>   <span class="o">=</span> <span class="sx">%q{Railsone helps you create emberjs 1.0 with twitter bootstrap 3.0}</span>
</span><span class='line'><span class="n">spec</span><span class="o">.</span><span class="n">summary</span>       <span class="o">=</span> <span class="sx">%q{Create emberjs with twitter bootstrap}</span>
</span><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then create a file in <em>lib/railsone/generators/install_generator.rb</em>. It&#8217;s better to put my custom generator in a generators folder.</p>

<figure class='code'><figcaption><span>railsone.gemspec</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">vim</span> <span class="n">railsone</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">railsone</span><span class="o">/</span><span class="n">generators</span><span class="o">/</span><span class="n">install_generator</span><span class="o">.</span><span class="n">rb</span>
</span></code></pre></td></tr></table></div></figure>


<p>Next the default auto generated file is in <em>lib/railsone.rb</em>. We should modify it to require my generator file.</p>

<figure class='code'><figcaption><span>railsone.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s2">&quot;railsone/version&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;railsone/generators/install_generator&quot;</span> <span class="c1"># require my custom generator.</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">Railsone</span>
</span><span class='line'>  <span class="c1"># Your code goes here...</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now continue to finish our <em>install_generator.rb</em></p>

<figure class='code'><figcaption><span>railsone.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;rails/generators&#39;</span> <span class="c1"># require rails&#39;s generator</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">Railsone</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">Generators</span>
</span><span class='line'>    <span class="k">class</span> <span class="nc">InstallGenerator</span> <span class="o">&lt;</span> <span class="o">::</span><span class="ss">Rails</span><span class="p">:</span><span class="ss">:Generators</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>      <span class="n">desc</span> <span class="s2">&quot;generator to create emberjs and twitter bootstrap&quot;</span> <span class="c1"># description when you type rails g railsone:install --help</span>
</span><span class='line'>
</span><span class='line'>      <span class="nb">self</span><span class="o">.</span><span class="n">source_paths</span> <span class="o">&lt;&lt;</span> <span class="no">File</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="bp">__FILE__</span><span class="p">),</span> <span class="s1">&#39;../../../templates&#39;</span><span class="p">)</span> <span class="c1"># source_paths is for external files</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">def</span> <span class="nf">example_cmd</span>
</span><span class='line'>        <span class="n">gem</span> <span class="s1">&#39;ember-rails&#39;</span>
</span><span class='line'>        <span class="n">remove_file</span> <span class="s1">&#39;app/assets/javascripts/application.js&#39;</span>
</span><span class='line'>        <span class="n">copy_file</span> <span class="s1">&#39;application.js&#39;</span><span class="p">,</span> <span class="s1">&#39;app/assets/javascripts/application.js&#39;</span>
</span><span class='line'>        <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Your generator may use external files and they should be searched by <code>source_paths</code>. I create a <em>templates</em> folder to place files. It&#8217;s under root folder.</p>

<figure class='code'><figcaption><span>folder_structure</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>railsone/lib/
</span><span class='line'>railsone/templates/
</span></code></pre></td></tr></table></div></figure>


<p>Any public method in your generator will be executed automatically. It means <code>example_cmd</code> will be executed when you execute generator.<br/>
Directive <code>gem 'ember-rails'</code> means add <em>gem &#8216;ember-rails&#8217;</em> into Gemfile. All commands can be found in <a href="http://guides.rubyonrails.org/generators.html">RubyGuides</a> and <a href="http://rdoc.info/github/wycats/thor/master/Thor/Actions.html">Thor:Action</a>.<br/>
Directive <code>copy_file</code> copy my custom application.js<em>(in templates/application.js)</em> to overwrite project&#8217;s application.js<em>(in app/assets/javascripts/application.js)</em>.</p>

<h3>How to test?</h3>

<p>Before push to RubyGems, we should do a minimal testing. Create a new rails project.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rails new myrails
</span></code></pre></td></tr></table></div></figure>


<p>Assume your <em>myrails</em> and <em>railsone</em> are in the same folder</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>railsone/
</span><span class='line'>myrails/
</span></code></pre></td></tr></table></div></figure>


<p>Add <em>railsone</em> to your myrails&#8217;s Gemfile</p>

<figure class='code'><figcaption><span>Gemfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;railsone&#39;</span><span class="p">,</span> <span class="ss">path</span><span class="p">:</span> <span class="s1">&#39;../railsone&#39;</span>
</span><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>Execute railsone generator. <em>railsone</em> is our namespace and <em>install</em> is our generator name.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd </span>myrails/
</span><span class='line'>rails g railsone:install
</span></code></pre></td></tr></table></div></figure>


<p>Then your will find your myrails Gemfile and application.js are changed.</p>

<h3>How to publish?</h3>

<p>Push to RubyGems is incrediblely simple. Refer to <a href="http://rubygems.org/">RubyGems</a>. <strong>Don&#8217;t forget to create your account first.</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># build your gem</span>
</span><span class='line'>gem build railsone.gemspec
</span><span class='line'>
</span><span class='line'><span class="c"># publish your gem</span>
</span><span class='line'>gem push railsone-0.0.1.gem
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Async in Emberjs]]></title>
    <link href="http://weichienhung.github.io/blog/2013/09/22/async-in-emberjs/"/>
    <updated>2013-09-22T17:40:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/09/22/async-in-emberjs</id>
    <content type="html"><![CDATA[<h2>Async Routing</h2>

<p>Reference to <a href="http://emberjs.com/guides/routing/asynchronous-routing/">ember guide</a>.<br/>
If you want to make sure model is ready before entering the target route. You could use async routing. How?<br/>
Make your model as Promise object in route&#8217;s model function.
For example: In year route i return a model that comes from <code>ModelMgr.listMonth(params.year_id)</code>.
Because model is Promise object, i add a <code>then</code> method to set id attribute to model(resolve will be model here)</p>

<figure class='code'><figcaption><span>YearRoute</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nv">model: </span><span class="nf">(params) -&gt;</span>
</span><span class='line'>  <span class="nv">model = </span><span class="nx">ModelMgr</span><span class="p">.</span><span class="nx">listMonth</span><span class="p">(</span><span class="nx">params</span><span class="p">.</span><span class="nx">year_id</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">model</span><span class="p">.</span><span class="nx">then</span> <span class="nf">(resolve, reject)-&gt;</span>
</span><span class='line'>      <span class="nx">resolve</span><span class="p">.</span><span class="nx">set</span> <span class="s">&#39;id&#39;</span><span class="p">,</span> <span class="nx">params</span><span class="p">.</span><span class="nx">year_id</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">model</span>
</span></code></pre></td></tr></table></div></figure>


<p>In <code>ModelMgr.listMonth</code> method, use <code>Ember.RSVP.Promise</code> to wrap your function. Because i don&#8217;t return anything in the last line of function.
CoffeeScript will return the promise object automatically. <code>months</code> will be the real model object.</p>

<figure class='code'><figcaption><span>ModelMgr</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nv">listMonth: </span><span class="nf">(year) -&gt;</span>
</span><span class='line'>  <span class="nv">months = </span><span class="nx">Ember</span><span class="p">.</span><span class="nx">ArrayProxy</span><span class="p">.</span><span class="nx">create</span><span class="p">({</span><span class="nx">content</span><span class="o">:</span><span class="p">[]})</span>
</span><span class='line'>  <span class="k">new</span> <span class="nx">Ember</span><span class="p">.</span><span class="nx">RSVP</span><span class="p">.</span><span class="nx">Promise</span> <span class="nf">(resolve) -&gt;</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span> <span class="s">&#39;/api/list&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nv">type: </span><span class="s">&#39;GET&#39;</span>
</span><span class='line'>    <span class="nv">dataType: </span><span class="s">&#39;json&#39;</span>
</span><span class='line'>    <span class="nv">data: </span><span class="s">&#39;y=&#39;</span><span class="o">+</span><span class="nx">year</span>
</span><span class='line'>    <span class="nv">success: </span><span class="nf">(data, textStatus, jqXHR) -&gt;</span>
</span><span class='line'>      <span class="k">for</span> <span class="nx">raw</span> <span class="k">in</span> <span class="nx">data</span>
</span><span class='line'>        <span class="nx">months</span><span class="p">.</span><span class="nx">addObject</span> <span class="nx">raw</span>
</span><span class='line'>      <span class="nx">months</span><span class="p">.</span><span class="nx">set</span> <span class="s">&#39;isReady&#39;</span><span class="p">,</span> <span class="kc">true</span>
</span><span class='line'>      <span class="nx">resolve</span><span class="p">(</span><span class="nx">months</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Wait multiple function call ready</h2>

<p>Sometimes you will use 3rd party library and it requires element existed in the DOM tree.
For example: I use highchartJS to draw diagram.<br/>
In the route it queries two models to finish the whole scenarios.
<code>model</code> is the result from <code>ModelMgr.listMonth</code> and <code>modelForTrend</code> is the result from <code>ModelMgr.queryTrend</code>.
The models all have attributes called <code>isReady</code> with false default. After <code>ModelMgr</code> get the data, it will set to true.</p>

<figure class='code'><figcaption><span>SummaryRoute</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'>  <span class="nv">model: </span><span class="nf">(params)-&gt;</span>
</span><span class='line'>    <span class="nv">model = </span><span class="nx">ModelMgr</span><span class="p">.</span><span class="nx">listMonth</span><span class="p">(</span><span class="nx">params</span><span class="p">.</span><span class="nx">year_id</span><span class="p">)</span>
</span><span class='line'>    <span class="nv">model.year = </span><span class="nx">params</span><span class="p">.</span><span class="nx">year_id</span> <span class="c1">#For queryTrend needs year as parameter</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">model</span>
</span><span class='line'>  <span class="nv">setupController: </span><span class="nf">(controller, model)-&gt;</span>
</span><span class='line'>    <span class="nv">modelForTrend = </span><span class="nx">ModelMgr</span><span class="p">.</span><span class="nx">queryTrend</span><span class="p">(</span><span class="nx">model</span><span class="p">.</span><span class="nx">year</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">controller</span><span class="p">.</span><span class="nx">set</span> <span class="s">&#39;model&#39;</span><span class="p">,</span> <span class="nx">model</span>
</span><span class='line'>    <span class="nx">controller</span><span class="p">.</span><span class="nx">set</span> <span class="s">&#39;modelForTrend&#39;</span><span class="p">,</span> <span class="nx">modelForTrend</span>
</span></code></pre></td></tr></table></div></figure>


<p>We have two attribute bindings to model&#8217;s attributes in controller.</p>

<figure class='code'><figcaption><span>SummaryController</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nv">SummaryController = </span><span class="nx">Ember</span><span class="p">.</span><span class="nx">ObjectController</span><span class="p">.</span><span class="nx">extend</span>
</span><span class='line'>  <span class="nv">dataReadyBinding: </span><span class="s">&#39;model.isReady&#39;</span>
</span><span class='line'>  <span class="nv">trendDataReadyBinding: </span><span class="s">&#39;modelForTrend.isReady&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create a method to observe all attributes we care about. View shouldn&#8217;t connect to Model directly.
So i make <code>drawLineChart</code> method to observe controller&#8217;s attribute.</p>

<figure class='code'><figcaption><span>SummaryView</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nv">SummaryView = </span><span class="nx">Ember</span><span class="p">.</span><span class="nx">View</span><span class="p">.</span><span class="nx">extend</span>
</span><span class='line'>  <span class="nv">elementReady: </span><span class="kc">false</span>
</span><span class='line'>  <span class="nv">drawLineChart: </span><span class="p">(</span> <span class="nf">-&gt;</span>
</span><span class='line'>    <span class="k">if</span> <span class="nx">@get</span><span class="p">(</span><span class="s">&#39;controller.dataReady&#39;</span><span class="p">)</span> <span class="o">and</span> <span class="nx">@get</span><span class="p">(</span><span class="s">&#39;controller.trendDataReady&#39;</span><span class="p">)</span> <span class="o">and</span> <span class="nx">@get</span><span class="p">(</span><span class="s">&#39;elementReady&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="nv">content = </span><span class="nx">@get</span> <span class="s">&#39;controller.model.content&#39;</span> <span class="c1"># content is ready</span>
</span><span class='line'>      <span class="nv">contentForTrend = </span><span class="nx">@get</span> <span class="s">&#39;controller.modelForTrend.content&#39;</span> <span class="c1"># contentForTrend is ready</span>
</span><span class='line'>      <span class="nx">$</span><span class="p">(</span><span class="s">&#39;#myTrend&#39;</span><span class="p">).</span><span class="nx">highcharts</span><span class="p">(</span> <span class="p">...</span> <span class="p">)</span> <span class="c1"># element is ready.</span>
</span><span class='line'>      <span class="c1"># do something here...</span>
</span><span class='line'>  <span class="p">).</span><span class="nx">observes</span><span class="p">(</span><span class="s">&#39;controller.dataReady&#39;</span><span class="p">,</span> <span class="s">&#39;elementReady&#39;</span><span class="p">,</span> <span class="s">&#39;controller.trendDataReady&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="nv">didInsertElement: </span><span class="nf">-&gt;</span>
</span><span class='line'>    <span class="nx">@set</span> <span class="s">&#39;elementReady&#39;</span><span class="p">,</span> <span class="kc">true</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use HighchartJS to visual data]]></title>
    <link href="http://weichienhung.github.io/blog/2013/09/22/use-highchartjs-to-visual/"/>
    <updated>2013-09-22T17:16:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/09/22/use-highchartjs-to-visual</id>
    <content type="html"><![CDATA[<p>I just push a new project to <a href="https://github.com/weichienhung/money">github</a> and <a href="http://weichien-money.herokuapp.com/">heroku</a>.
This project is derived from my iOS App <a href="https://itunes.apple.com/tw/app/monny/id590327036?mt=8">Monny</a>.
The App I used it to record my daily expense. The free version doesn&#8217;t have visual graph to show summary data.
So i use EmberJS,HighchartJS and Rails to build this simple web app. I always learned new knowledge during coding.</p>

<p>I take few snaphots of this probject.</p>

<!-- more -->


<h3>List every record</h3>

<p><img src="http://weichienhung.github.io/images/0922-list.png" width="500" height="500" title="list-image" alt="list"></p>

<h3>Category summary</h3>

<p><img src="http://weichienhung.github.io/images/0922-summary.png" width="500" height="500" title="summary-image" alt="summary"></p>

<h3>Year trend</h3>

<p><img src="http://weichienhung.github.io/images/0922-trend.png" width="500" height="500" title="trend-image" alt="trend"></p>

<p>I won&#8217;t describe studying notes here but write them in other posts.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ActionSupport in Rails4 part2]]></title>
    <link href="http://weichienhung.github.io/blog/2013/09/13/actionsupport-in-rails4-part2/"/>
    <updated>2013-09-13T21:42:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/09/13/actionsupport-in-rails4-part2</id>
    <content type="html"><![CDATA[<p>Continue ActionSupport useful record</p>

<h3>Extensions to Numeric</h3>

<hr />

<p>Defined in active_support/core_ext/numeric/bytes.rb.</p>

<h4>Bytes</h4>

<p>All number respond to these methods</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="mi">2</span><span class="o">.</span><span class="n">kilobytes</span>   <span class="c1"># =&gt; 2048</span>
</span><span class='line'><span class="mi">3</span><span class="o">.</span><span class="n">megabytes</span>   <span class="c1"># =&gt; 3145728</span>
</span><span class='line'><span class="mi">3</span><span class="o">.</span><span class="mi">5</span><span class="o">.</span><span class="n">gigabytes</span> <span class="c1"># =&gt; 3758096384</span>
</span><span class='line'><span class="o">-</span><span class="mi">4</span><span class="o">.</span><span class="n">exabytes</span>   <span class="c1"># =&gt; -4611686018427387904</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more-->


<hr />

<p>Defined in active_support/core_ext/numeric/time.rb.</p>

<h4>Time</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># equivalent to Time.current.advance(months: 1)</span>
</span><span class='line'><span class="mi">1</span><span class="o">.</span><span class="n">month</span><span class="o">.</span><span class="n">from_now</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># equivalent to Time.current.advance(years: 2)</span>
</span><span class='line'><span class="mi">2</span><span class="o">.</span><span class="n">years</span><span class="o">.</span><span class="n">from_now</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># equivalent to Time.current.advance(months: 4, years: 5)</span>
</span><span class='line'><span class="p">(</span><span class="mi">4</span><span class="o">.</span><span class="n">months</span> <span class="o">+</span> <span class="mi">5</span><span class="o">.</span><span class="n">years</span><span class="p">)</span><span class="o">.</span><span class="n">from_now</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Extensions to Integer</h3>

<hr />

<p>Defined in active_support/core_ext/integer/multiple.rb.</p>

<h4>multiple_of</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="mi">2</span><span class="o">.</span><span class="n">multiple_of?</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="c1"># =&gt; true</span>
</span><span class='line'><span class="mi">1</span><span class="o">.</span><span class="n">multiple_of?</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="c1"># =&gt; false</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Extensions to Enumerable</h3>

<hr />

<p>Defined in active_support/core_ext/enumerable.rb.</p>

<h4>sum</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="o">].</span><span class="n">sum</span> <span class="c1"># =&gt; 6</span>
</span><span class='line'><span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">100</span><span class="p">)</span><span class="o">.</span><span class="n">sum</span>  <span class="c1"># =&gt; 5050</span>
</span></code></pre></td></tr></table></div></figure>


<p>If a block is given, sum becomes an iterator that yields the elements of the collection and sums the returned values:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">5</span><span class="p">)</span><span class="o">.</span><span class="n">sum</span> <span class="p">{</span><span class="o">|</span><span class="n">n</span><span class="o">|</span> <span class="n">n</span> <span class="o">*</span> <span class="mi">2</span> <span class="p">}</span> <span class="c1"># =&gt; 30</span>
</span><span class='line'><span class="o">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">10</span><span class="o">].</span><span class="n">sum</span>    <span class="c1"># =&gt; 30</span>
</span></code></pre></td></tr></table></div></figure>


<h4>many?</h4>

<p>The method many? is shorthand for collection.size > 1:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">% if </span><span class="n">pages</span><span class="o">.</span><span class="n">many?</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;%= pagination_links %&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">% end </span><span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Extensions to Array</h3>

<hr />

<p>Defined in active_support/core_ext/array/access.rb.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sx">%w(a b c d)</span><span class="o">.</span><span class="n">to</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="c1"># =&gt; %w(a b c)</span>
</span><span class='line'><span class="o">[].</span><span class="n">to</span><span class="p">(</span><span class="mi">7</span><span class="p">)</span>          <span class="c1"># =&gt; []</span>
</span><span class='line'><span class="sx">%w(a b c d)</span><span class="o">.</span><span class="n">from</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>  <span class="c1"># =&gt; %w(c d)</span>
</span><span class='line'><span class="sx">%w(a b c d)</span><span class="o">.</span><span class="n">from</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="c1"># =&gt; []</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<p>Defined in active_support/core_ext/array/prepend_and_append.rb.</p>

<h4>prepend and append</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sx">%w(a b c d)</span><span class="o">.</span><span class="n">prepend</span><span class="p">(</span><span class="s1">&#39;e&#39;</span><span class="p">)</span>  <span class="c1"># =&gt; %w(e a b c d)</span>
</span><span class='line'><span class="o">[].</span><span class="n">prepend</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>            <span class="c1"># =&gt; [10]</span>
</span><span class='line'><span class="sx">%w(a b c d)</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s1">&#39;e&#39;</span><span class="p">)</span>  <span class="c1"># =&gt; %w(a b c d e)</span>
</span><span class='line'><span class="o">[].</span><span class="n">append</span><span class="p">(</span><span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="o">]</span><span class="p">)</span>         <span class="c1"># =&gt; [[1,2]]</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<p>Defined in active_support/core_ext/array/grouping.rb</p>

<h4>in_groups_of(number, fill_with = nil)</h4>

<p>The method in_groups_of splits an array into consecutive groups of a certain size.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="o">].</span><span class="n">in_groups_of</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="c1"># =&gt; [[1, 2], [3, nil]]</span>
</span><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="o">].</span><span class="n">in_groups_of</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="kp">false</span><span class="p">)</span> <span class="c1"># =&gt; [[1, 2], [3]]</span>
</span><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="o">].</span><span class="n">in_groups_of</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span> <span class="c1"># =&gt; [[1, 2], [3, 0]]</span>
</span></code></pre></td></tr></table></div></figure>


<h4>in_groups(number, fill_with = nil)</h4>

<p>The method in_groups splits an array into a certain number of groups.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sx">%w(1 2 3 4 5 6 7)</span><span class="o">.</span><span class="n">in_groups</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>
</span><span class='line'><span class="c1"># =&gt; [[&quot;1&quot;, &quot;2&quot;, &quot;3&quot;], [&quot;4&quot;, &quot;5&quot;, nil], [&quot;6&quot;, &quot;7&quot;, nil]]</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ActionSupport in Rails4 part1]]></title>
    <link href="http://weichienhung.github.io/blog/2013/09/12/actionsupport-methods-in-rails4/"/>
    <updated>2013-09-12T17:23:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/09/12/actionsupport-methods-in-rails4</id>
    <content type="html"><![CDATA[<p>Recently i study documents in <a href="http://edgeguides.rubyonrails.org/">ruby edgeguides</a>.
There are a lot of methods in ActionSupport chapter. I record something useful here and for reference in the future.</p>

<h3>Extensions to All Objects</h3>

<hr />

<p>Defined in active_support/core_ext/object/blank.rb.</p>

<h4>blank?</h4>

<p>Following vlaues are considered to be blank.<br/>
* nil and false<br/>
* strings composed only of whitespace (see note below)<br/>
* empty arrays and hashes<br/>
In particular, 0 and 0.0 are not blank.</p>

<!-- more-->


<h4>present?</h4>

<p>The method <code>present?</code> is equivalent to <code>!blank?</code></p>

<h4>presence</h4>

<p>Returns itself if present?, and nil otherwise. Useful</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">host</span> <span class="o">=</span> <span class="n">config</span><span class="o">[</span><span class="ss">:host</span><span class="o">].</span><span class="n">presence</span> <span class="o">||</span> <span class="s1">&#39;localhost&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<p>Defined in active_support/core_ext/object/duplicable.rb.</p>

<h4>duplicable?</h4>

<p>By definition all objects are duplicable? except nil, false, true, symbols, numbers, class, and module objects.</p>

<hr />

<p>Defined in active_support/core_ext/object/duplicable.rb.</p>

<h4>deep_dup</h4>

<p>Deep duplicate. Normally, <code>dup</code> an object that contains other objects, Ruby only creates a shallow copy of the object.</p>

<hr />

<p>Defined in active_support/core_ext/object/try.rb.</p>

<h4>try</h4>

<p>Try to call a method only if it is not nil</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># without try</span>
</span><span class='line'><span class="k">unless</span> <span class="vi">@number</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>  <span class="vi">@number</span><span class="o">.</span><span class="n">next</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># with try</span>
</span><span class='line'><span class="vi">@number</span><span class="o">.</span><span class="n">try</span><span class="p">(</span><span class="ss">:next</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>try can also be called without arguments but a block</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vi">@person</span><span class="o">.</span><span class="n">try</span> <span class="p">{</span> <span class="o">|</span><span class="n">person</span><span class="o">|</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">person</span><span class="o">.</span><span class="n">first_name</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="n">person</span><span class="o">.</span><span class="n">last_name</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<p>Defined in active_support/core_ext/object/with_options.rb.</p>

<h4>with_options</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Account</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:customers</span><span class="p">,</span> <span class="ss">dependent</span><span class="p">:</span> <span class="ss">:destroy</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:products</span><span class="p">,</span>  <span class="ss">dependent</span><span class="p">:</span> <span class="ss">:destroy</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:invoices</span><span class="p">,</span>  <span class="ss">dependent</span><span class="p">:</span> <span class="ss">:destroy</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:expenses</span><span class="p">,</span>  <span class="ss">dependent</span><span class="p">:</span> <span class="ss">:destroy</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># with options way</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Account</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">with_options</span> <span class="ss">dependent</span><span class="p">:</span> <span class="ss">:destroy</span> <span class="k">do</span> <span class="o">|</span><span class="n">assoc</span><span class="o">|</span>
</span><span class='line'>    <span class="n">assoc</span><span class="o">.</span><span class="n">has_many</span> <span class="ss">:customers</span>
</span><span class='line'>    <span class="n">assoc</span><span class="o">.</span><span class="n">has_many</span> <span class="ss">:products</span>
</span><span class='line'>    <span class="n">assoc</span><span class="o">.</span><span class="n">has_many</span> <span class="ss">:invoices</span>
</span><span class='line'>    <span class="n">assoc</span><span class="o">.</span><span class="n">has_many</span> <span class="ss">:expenses</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<p>Defined in active_support/core_ext/object/instance_variables.rb.</p>

<h4>instance_values</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">C</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@x</span><span class="p">,</span> <span class="vi">@y</span> <span class="o">=</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">C</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">instance_values</span> <span class="c1"># =&gt; {&quot;x&quot; =&gt; 0, &quot;y&quot; =&gt; 1}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>instance_variable_names</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">C</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@x</span><span class="p">,</span> <span class="vi">@y</span> <span class="o">=</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">C</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">instance_variable_names</span> <span class="c1"># =&gt; [&quot;@x&quot;, &quot;@y&quot;]</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<p>Defined in active_support/core_ext/object/inclusion.rb.</p>

<h4>in?</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="mi">1</span><span class="o">.</span><span class="n">in?</span><span class="p">(</span><span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="o">]</span><span class="p">)</span>        <span class="c1"># =&gt; true</span>
</span><span class='line'><span class="s2">&quot;lo&quot;</span><span class="o">.</span><span class="n">in?</span><span class="p">(</span><span class="s2">&quot;hello&quot;</span><span class="p">)</span>   <span class="c1"># =&gt; true</span>
</span><span class='line'><span class="mi">25</span><span class="o">.</span><span class="n">in?</span><span class="p">(</span><span class="mi">30</span><span class="o">.</span><span class="n">.</span><span class="mi">50</span><span class="p">)</span>      <span class="c1"># =&gt; false</span>
</span><span class='line'><span class="mi">1</span><span class="o">.</span><span class="n">in?</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>            <span class="c1"># =&gt; ArgumentError because argument passed does not respond to include?.</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Extensions to Module</h3>

<hr />

<p>Defined in active_support/core_ext/module/attr_internal.rb.</p>

<h4>Internal Attributes</h4>

<p>Active Support defines the macros attr_internal_reader, attr_internal_writer, and attr_internal_accessor
The macro attr_internal is a synonym for attr_internal_accessor:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># library</span>
</span><span class='line'><span class="k">class</span> <span class="nc">ThirdPartyLibrary</span><span class="o">::</span><span class="no">Crawler</span>
</span><span class='line'>  <span class="n">attr_internal</span> <span class="ss">:log_level</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># client code</span>
</span><span class='line'><span class="k">class</span> <span class="nc">MyCrawler</span> <span class="o">&lt;</span> <span class="ss">ThirdPartyLibrary</span><span class="p">:</span><span class="ss">:Crawler</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:log_level</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Extensions to String</h3>

<hr />

<p>Defined in active_support/core_ext/string/filters.rb.</p>

<h4>remove</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Hello</span> <span class="no">World</span><span class="s2">&quot;.remove(/Hello /) =&gt; &quot;</span><span class="no">World</span><span class="s2">&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>squish</h4>

<p>The method squish strips leading and trailing whitespace, and substitutes runs of whitespace with a single space each:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s2">&quot; </span><span class="se">\n</span><span class="s2">  foo</span><span class="se">\n\r</span><span class="s2"> </span><span class="se">\t</span><span class="s2"> bar </span><span class="se">\n</span><span class="s2">&quot;</span><span class="o">.</span><span class="n">squish</span> <span class="c1"># =&gt; &quot;foo bar&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>truncate</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s2">&quot;Oh dear! Oh dear! I shall be late!&quot;</span><span class="o">.</span><span class="n">truncate</span><span class="p">(</span><span class="mi">20</span><span class="p">)</span>
</span><span class='line'><span class="c1"># =&gt; &quot;Oh dear! Oh dear!...&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ellipsis can be customized with the :omission option</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s2">&quot;Oh dear! Oh dear! I shall be late!&quot;</span><span class="o">.</span><span class="n">truncate</span><span class="p">(</span><span class="mi">20</span><span class="p">,</span> <span class="ss">omission</span><span class="p">:</span> <span class="s1">&#39;&amp;hellip;&#39;</span><span class="p">)</span>
</span><span class='line'><span class="c1"># =&gt; &quot;Oh dear! Oh &amp;hellip;&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Note in particular that truncation takes into account the length of the omission string.
Pass a :separator to truncate the string at a natural break:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s2">&quot;Oh dear! Oh dear! I shall be late!&quot;</span><span class="o">.</span><span class="n">truncate</span><span class="p">(</span><span class="mi">18</span><span class="p">)</span>
</span><span class='line'><span class="c1"># =&gt; &quot;Oh dear! Oh dea...&quot;</span>
</span><span class='line'><span class="s2">&quot;Oh dear! Oh dear! I shall be late!&quot;</span><span class="o">.</span><span class="n">truncate</span><span class="p">(</span><span class="mi">18</span><span class="p">,</span> <span class="ss">separator</span><span class="p">:</span> <span class="s1">&#39; &#39;</span><span class="p">)</span>
</span><span class='line'><span class="c1"># =&gt; &quot;Oh dear! Oh...&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<p>Defined in active_support/core_ext/string/starts_ends_with.rb.</p>

<h4>starts_with? and ends_with?</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s2">&quot;foo&quot;</span><span class="o">.</span><span class="n">starts_with?</span><span class="p">(</span><span class="s2">&quot;f&quot;</span><span class="p">)</span> <span class="c1"># =&gt; true</span>
</span><span class='line'><span class="s2">&quot;foo&quot;</span><span class="o">.</span><span class="n">ends_with?</span><span class="p">(</span><span class="s2">&quot;o&quot;</span><span class="p">)</span>   <span class="c1"># =&gt; true</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<p>Defined in active_support/core_ext/string/access.rb.</p>

<h4>at(position)</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s2">&quot;hello&quot;</span><span class="o">.</span><span class="n">at</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>  <span class="c1"># =&gt; &quot;h&quot;</span>
</span><span class='line'><span class="s2">&quot;hello&quot;</span><span class="o">.</span><span class="n">at</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>  <span class="c1"># =&gt; &quot;o&quot;</span>
</span><span class='line'><span class="s2">&quot;hello&quot;</span><span class="o">.</span><span class="n">at</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="c1"># =&gt; &quot;o&quot;</span>
</span><span class='line'><span class="s2">&quot;hello&quot;</span><span class="o">.</span><span class="n">at</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="c1"># =&gt; nil</span>
</span></code></pre></td></tr></table></div></figure>


<h4>from(position)</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s2">&quot;hello&quot;</span><span class="o">.</span><span class="n">from</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>  <span class="c1"># =&gt; &quot;hello&quot;</span>
</span><span class='line'><span class="s2">&quot;hello&quot;</span><span class="o">.</span><span class="n">from</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>  <span class="c1"># =&gt; &quot;llo&quot;</span>
</span><span class='line'><span class="s2">&quot;hello&quot;</span><span class="o">.</span><span class="n">from</span><span class="p">(</span><span class="o">-</span><span class="mi">2</span><span class="p">)</span> <span class="c1"># =&gt; &quot;lo&quot;</span>
</span><span class='line'><span class="s2">&quot;hello&quot;</span><span class="o">.</span><span class="n">from</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="c1"># =&gt; &quot;&quot; if &lt; 1.9, nil in 1.9</span>
</span></code></pre></td></tr></table></div></figure>


<h4>to(position)</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s2">&quot;hello&quot;</span><span class="o">.</span><span class="n">to</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>  <span class="c1"># =&gt; &quot;h&quot;</span>
</span><span class='line'><span class="s2">&quot;hello&quot;</span><span class="o">.</span><span class="n">to</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>  <span class="c1"># =&gt; &quot;hel&quot;</span>
</span><span class='line'><span class="s2">&quot;hello&quot;</span><span class="o">.</span><span class="n">to</span><span class="p">(</span><span class="o">-</span><span class="mi">2</span><span class="p">)</span> <span class="c1"># =&gt; &quot;hell&quot;</span>
</span><span class='line'><span class="s2">&quot;hello&quot;</span><span class="o">.</span><span class="n">to</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="c1"># =&gt; &quot;hello&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<p>Defined in active_support/core_ext/string/conversions.rb.</p>

<h4>to_date, to_time, to_datetime</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s2">&quot;2010-07-27&quot;</span><span class="o">.</span><span class="n">to_date</span>              <span class="c1"># =&gt; Tue, 27 Jul 2010</span>
</span><span class='line'><span class="s2">&quot;2010-07-27 23:37:00&quot;</span><span class="o">.</span><span class="n">to_time</span>     <span class="c1"># =&gt; Tue Jul 27 23:37:00 UTC 2010</span>
</span><span class='line'><span class="s2">&quot;2010-07-27 23:37:00&quot;</span><span class="o">.</span><span class="n">to_datetime</span> <span class="c1"># =&gt; Tue, 27 Jul 2010 23:37:00 +0000</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&quot;2010-07-27 23:42:00&quot;</span><span class="o">.</span><span class="n">to_time</span><span class="p">(</span><span class="ss">:utc</span><span class="p">)</span>   <span class="c1"># =&gt; Tue Jul 27 23:42:00 UTC 2010</span>
</span><span class='line'><span class="s2">&quot;2010-07-27 23:42:00&quot;</span><span class="o">.</span><span class="n">to_time</span><span class="p">(</span><span class="ss">:local</span><span class="p">)</span> <span class="c1"># =&gt; Tue Jul 27 23:42:00 +0200 2010</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ckeditor with Rails4 on heroku]]></title>
    <link href="http://weichienhung.github.io/blog/2013/09/09/rails-and-heroku/"/>
    <updated>2013-09-09T22:32:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/09/09/rails-and-heroku</id>
    <content type="html"><![CDATA[<p>I push <a href="https://github.com/weichienhung/rails101_groupme">rails101_groupme</a> to <a href="http://weichien-groupme.herokuapp.com/">heroku</a> today.
The project doesn&#8217;t have access control and i18n. I use cancan gem to do access authorization and default i18n mechanism.
Besides, i also upgrade twitter bootstrap to 3.0.0.</p>

<!-- more -->


<p>When i push to heroku, i get stuck in ckeditor&#8217;s rails 4 compatibility and git issue. After googling i solve it finally.</p>

<h3>Fail to fetch gem from git</h3>

<p>Error message like this</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Fetching git@github.com:Compass/compass-rails.git
</span><span class='line'>Host key verification failed.
</span><span class='line'>fatal: The remote end hung up unexpectedly
</span><span class='line'>Git error: command `git clone 'git@github.com:Compass/compass-rails.git' "/tmp/build_1xa9</span></code></pre></td></tr></table></div></figure>


<p>Because git@github.com use SSH to communication, it requires authentication.
Your gemfile may contain some gems like</p>

<figure class='code'><figcaption><span>Old</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s2">&quot;compass-rails&quot;</span><span class="p">,</span> <span class="ss">:git</span> <span class="o">=&gt;</span> <span class="s2">&quot;git@github.com:Compass/compass-rails.git&quot;</span><span class="p">,</span> <span class="ss">:branch</span> <span class="o">=&gt;</span> <span class="s2">&quot;rails4&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Change to</p>

<figure class='code'><figcaption><span>New</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s2">&quot;compass-rails&quot;</span><span class="p">,</span> <span class="ss">:github</span> <span class="o">=&gt;</span> <span class="s2">&quot;Compass/compass-rails&quot;</span><span class="p">,</span> <span class="ss">:branch</span> <span class="o">=&gt;</span> <span class="s2">&quot;rails4&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Miss assets in rails 4</h3>

<p>Very helpful <a href="http://theotherzach.com/writes/2013/3/13/rails-4-and-heroku-missing-assets">link</a>. Put below in your production.rb</p>

<figure class='code'><figcaption><span>production.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">serve_static_assets</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Ckeditor doesn&#8217;t show correctly</h3>

<p>Reference to <a href="http://www.cnblogs.com/lmei/p/3306643.html">link</a> and <a href="http://dev.mensfeld.pl/2013/07/upgrading-to-rails-4-0-from-rails-3-2-test-case-part-ii-assets-models/">link2</a>.
Because ckeditor will read the assets file without digest postfix. My solution is<br/>
Add a rake file to create nondigest file of all ckeditor assets.</p>

<figure class='code'><figcaption><span>ckeditor.rake</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;fileutils&#39;</span>
</span><span class='line'><span class="n">desc</span> <span class="s2">&quot;Create nondigest versions of all ckeditor digest assets&quot;</span>
</span><span class='line'><span class="n">task</span> <span class="ss">ckeditor</span><span class="p">:</span> <span class="ss">:environment</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">fingerprint</span> <span class="o">=</span> <span class="sr">/\-[0-9a-f]{32}\./</span>
</span><span class='line'>  <span class="k">for</span> <span class="n">file</span> <span class="k">in</span> <span class="no">Dir</span><span class="o">[</span><span class="s2">&quot;public/assets/ckeditor/**/*&quot;</span><span class="o">]</span>
</span><span class='line'>    <span class="k">next</span> <span class="k">unless</span> <span class="n">file</span> <span class="o">=~</span> <span class="n">fingerprint</span>
</span><span class='line'>    <span class="n">nondigest</span> <span class="o">=</span> <span class="n">file</span><span class="o">.</span><span class="n">sub</span> <span class="n">fingerprint</span><span class="p">,</span> <span class="s1">&#39;.&#39;</span>
</span><span class='line'>    <span class="no">FileUtils</span><span class="o">.</span><span class="n">cp</span> <span class="n">file</span><span class="p">,</span> <span class="n">nondigest</span><span class="p">,</span> <span class="ss">verbose</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Execute <code>rake ckeditor</code> after <code>rake assets:precompile</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake assets:precompile
</span><span class='line'>rake ckeditor
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[First ember_rails project]]></title>
    <link href="http://weichienhung.github.io/blog/2013/09/03/first-ember-rails-project/"/>
    <updated>2013-09-03T23:57:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/09/03/first-ember-rails-project</id>
    <content type="html"><![CDATA[<p>Last time i said i want to make an ember-rails project(<a href="http://127.0.0.1:4000/blog/2013/08/25/rails-and-ember-study/">post</a>).
Today I push my first Ember-Rails(food-ntpc) project to <a href="https://github.com/weichienhung/food-ntpc">github</a> and <a href="http://food-ntpc.herokuapp.com/">heroku</a>.
It takes me more time to finish it because i am not familiar with coffee script. I also create a new <a href="http://weichienhung.github.io/blog/2013/09/01/coffee-script-memo/">post</a> for coffee script memo.
During practicing i use Emberjs 1.0.0.rc7. But Emberjs 1.0.0 was released few days ago and i upgrade it to 1.0.0.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Multiple models in a view]]></title>
    <link href="http://weichienhung.github.io/blog/2013/09/01/multiple-model-in-a-view/"/>
    <updated>2013-09-01T20:29:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/09/01/multiple-model-in-a-view</id>
    <content type="html"><![CDATA[<p>How to use multiple models in a view?
Retrieve another data and set to controller in Route&#8217;s setupController method.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nv">model: </span><span class="nf">-&gt;</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">Place</span><span class="p">.</span><span class="nx">places</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="nv">setupController: </span><span class="nf">(controller, model) -&gt;</span>
</span><span class='line'>  <span class="c1">#model is the result of Place.places()</span>
</span><span class='line'>  <span class="nx">controller</span><span class="p">.</span><span class="nx">set</span> <span class="s">&#39;content&#39;</span><span class="p">,</span> <span class="nx">model</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">#another data</span>
</span><span class='line'>  <span class="nv">categorys = </span><span class="nx">Category</span><span class="p">.</span><span class="nx">categorys</span><span class="p">()</span>
</span><span class='line'>  <span class="nx">controller</span><span class="p">.</span><span class="nx">set</span> <span class="s">&#39;categorys&#39;</span><span class="p">,</span> <span class="nx">categorys</span>
</span></code></pre></td></tr></table></div></figure>


<p>I create CategoryView and bind data to it in template</p>

<pre>
&#123;{#each category in categorys}}
  &#123;{#view CategoryView contentBinding="category"}}
    &#123;{category.name}}
  &#123;{/view}}
&#123;{/each}}

&#123;{#each place in content}}
  &#123;{place.name}}
&#123;{/each}}
</pre>


<p>CategoryView code:
I use classNameBinding to auto update class when status is changed.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nv">CategoryView = </span><span class="nx">Ember</span><span class="p">.</span><span class="nx">View</span><span class="p">.</span><span class="nx">extend</span>
</span><span class='line'>  <span class="nv">classNameBindings: </span><span class="p">[</span><span class="s">&#39;getClass&#39;</span><span class="p">]</span>
</span><span class='line'>  <span class="nv">status: </span><span class="kc">true</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">getClass: </span><span class="p">(</span> <span class="nf">-&gt;</span>
</span><span class='line'>    <span class="k">if</span> <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s">&#39;status&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">return</span> <span class="s">&quot;btn-info&quot;</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="k">return</span> <span class="s">&quot;btn-default&quot;</span>
</span><span class='line'>  <span class="p">).</span><span class="nx">property</span><span class="p">(</span><span class="s">&#39;status&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Coffee script memo]]></title>
    <link href="http://weichienhung.github.io/blog/2013/09/01/coffee-script-memo/"/>
    <updated>2013-09-01T16:35:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/09/01/coffee-script-memo</id>
    <content type="html"><![CDATA[<p>From last week i tried the Ember-Rails and studied the coffee script btw. Because more and more people use coffee script and i want to understand their codes!
In the beginning the coffee script syntax confuses me a lot and cost a lot of time to google it.
I decide to keep it on post for reference in the future.</p>

<!--more-->


<p>The indent is the most important to coffeescript. Wrong indent cause compile fail.
For example: define a method to call ajax. You can insert variable into string using <code>"#{}"</code>. <code>@successHandle</code> invoke the another method inside ajax scope</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nv">getData: </span><span class="nf">-&gt;</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span> <span class="s">&#39;/api/post/&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nv">type: </span><span class="s">&#39;GET&#39;</span>
</span><span class='line'>    <span class="nv">dataType: </span><span class="s">&#39;json&#39;</span>
</span><span class='line'>    <span class="nv">success: </span><span class="nf">(data, textStatus, jqXHR) -&gt;</span>
</span><span class='line'>      <span class="nx">@successHandle</span> <span class="nx">data</span>
</span><span class='line'>
</span><span class='line'>    <span class="nv">successHandle: </span><span class="nf">(data) -&gt;</span>
</span><span class='line'>      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span> <span class="s">&quot;success </span><span class="si">#{</span><span class="nx">data</span><span class="si">}</span><span class="s">&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Pass a string and function. For example: listen a click event</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nx">button</span><span class="p">.</span><span class="nx">addListener</span> <span class="s">&#39;click&#39;</span><span class="p">,()</span> <span class="nf">-&gt;</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span> <span class="s">&#39;btn click&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Iterate a hash object</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nv">hashobject =</span>
</span><span class='line'>  <span class="nv">name: </span><span class="s">&#39;ben&#39;</span>
</span><span class='line'>  <span class="nv">address: </span><span class="s">&#39;xxxxx&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="nx">key</span><span class="p">,</span> <span class="nx">value</span> <span class="k">of</span> <span class="nx">hashobject</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span> <span class="nx">key</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span> <span class="nx">value</span>
</span></code></pre></td></tr></table></div></figure>


<p>All variable definition will be scoped in function. If you want to def a variable in each loop, you should use <code>do () -&gt;</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nv">check = </span><span class="p">()</span> <span class="nf">-&gt;</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">person</span> <span class="k">in</span> <span class="nx">people</span>
</span><span class='line'>    <span class="nv">post = </span><span class="k">new</span> <span class="nx">Post</span><span class="p">()</span>
</span><span class='line'>    <span class="nx">person</span><span class="p">.</span><span class="nx">setPost</span> <span class="nx">post</span>
</span><span class='line'><span class="c1">#every person has the same post reference</span>
</span><span class='line'>
</span><span class='line'><span class="nv">check = </span><span class="p">()</span> <span class="nf">-&gt;</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">person</span> <span class="k">in</span> <span class="nx">people</span>
</span><span class='line'>    <span class="nx">do</span> <span class="nf">(person) -&gt;</span>
</span><span class='line'>      <span class="nv">post = </span><span class="k">new</span> <span class="nx">Post</span><span class="p">()</span>
</span><span class='line'>      <span class="nx">person</span><span class="p">.</span><span class="nx">setPost</span> <span class="nx">post</span>
</span><span class='line'><span class="c1">#every person has his post</span>
</span></code></pre></td></tr></table></div></figure>


<p>Timeout syntax</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nx">setTimeout</span> <span class="p">(</span><span class="nf">-&gt;</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span> <span class="s">&quot;hello world&quot;</span>
</span><span class='line'><span class="p">),</span> <span class="mi">100</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails and ember study]]></title>
    <link href="http://weichienhung.github.io/blog/2013/08/25/rails-and-ember-study/"/>
    <updated>2013-08-25T07:13:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/08/25/rails-and-ember-study</id>
    <content type="html"><![CDATA[<p>I pushed two project(<a href="https://github.com/weichienhung/rails101_groupme">rails101-groupme</a>,<a href="https://github.com/weichienhung/project101">project101</a>)to github yesterday.
I bought the ebook <a href="http://rails-101.logdown.com/">rails101</a> and make rails101-groupme project by follow instructions of book.
Besides i add some features into rails101-groupme.<br/>
1.Every user could reply the post<br/>
2.Rich text editor, CKeditor</p>

<p><a href="https://github.com/weichienhung/project101">project101</a> is the old project i practiced emberjs. It retrieves data from <a href="http://data.taipei.gov.tw/">open data Taipei</a> and show on table.
This project was made because inspired by yunglinho&#8217;s <a href="http://blog.yunglinho.com/blog/2011/11/15/">post</a>. I study google map API and add into it recently.
Most of locations could be show on google map. Somes are not because can&#8217;t be geocode to <a href="https://developers.google.com/maps/documentation/javascript/reference#LatLng">LatLng</a>.
There&#8217;s a disadvantage here. Geocode needs to send requests to google but google will block it if you use API frequently. Implement it on clide side is not a good idea.
I am planing to have a new project that use Rails and Emberjs. I could add my json API and store LatLng in database to prevent too many requests to google.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Improve sublime]]></title>
    <link href="http://weichienhung.github.io/blog/2013/08/19/improve-sublime/"/>
    <updated>2013-08-19T23:16:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/08/19/improve-sublime</id>
    <content type="html"><![CDATA[<p>I install new Color Schemes,Theme,package to sublime and make it&#8217;s look and feel better. Here is the list i have added.</p>

<h3>1.indent Guide</h3>

<p>Make your current indent with different color. Open <code>Preferences</code> > <code>Settings - Default</code> and add <code>draw_active</code> to <code>indent_guide_options</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="err">...</span>
</span><span class='line'><span class="s2">&quot;indent_guide_options&quot;</span><span class="err">:</span> <span class="p">[</span><span class="s2">&quot;draw_normal&quot;</span><span class="p">,</span><span class="s2">&quot;draw_active&quot;</span><span class="p">]</span><span class="err">,</span>
</span><span class='line'><span class="err">...</span>
</span></code></pre></td></tr></table></div></figure>


<p>You could change the color of draw_active. Open your current color scheme setting file.
Add</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;dict&gt;</span>
</span><span class='line'>  <span class="nt">&lt;key&gt;</span>settings<span class="nt">&lt;/key&gt;</span>
</span><span class='line'>  <span class="nt">&lt;dict&gt;</span>
</span><span class='line'>    ...
</span><span class='line'>    ...
</span><span class='line'>    <span class="nt">&lt;key&gt;</span>activeGuide<span class="nt">&lt;/key&gt;</span>
</span><span class='line'>    <span class="nt">&lt;string&gt;</span>#CED418<span class="nt">&lt;/string&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/dict&gt;</span>
</span><span class='line'><span class="nt">&lt;/dict&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<!-- more -->


<h3>2.Soda-theme</h3>

<p>Folow <a href="https://github.com/buymeasoda/soda-theme/">soda-theme</a> to install. After installation done, you have to enable it in <code>Preferences</code> > <code>Settings - User</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'> &quot;theme&quot;:&quot;Soda Light.sublime-theme&quot;
</span></code></pre></td></tr></table></div></figure>


<h3>3.KeymapManager</h3>

<p>The easy way to show all your shortcut key. Good for me. You can use <code>Package Control</code> > <code>Install Package</code> > <code>KeymapManager</code> to install it.</p>

<h3>4.Tomorrow Theme</h3>

<p>The most beautiful color scheme. Use <code>Package Control</code> > <code>Install Package</code> > <code>Tomorrow - Theme</code> to install.
I prefer the Tomorrow-Night-Eighties theme</p>

<h3>5. All autocomplete</h3>

<p>Auto complete in every opening tab.
Use <code>Package Control</code> > <code>Install Package</code> > <code>All Autocomplete</code></p>

<h3>6. Default setting update</h3>

<p><code>Preferences</code> > <code>Settings -&gt; Default</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="err">...</span>
</span><span class='line'><span class="err">//Change</span> <span class="err">tab</span> <span class="err">to</span> <span class="err">spaces</span>
</span><span class='line'><span class="s2">&quot;translate_tabs_to_spaces&quot;</span><span class="err">:</span> <span class="kc">true</span><span class="err">,</span>
</span><span class='line'>
</span><span class='line'><span class="err">//Highlight</span> <span class="err">the</span> <span class="err">current</span> <span class="err">line</span>
</span><span class='line'><span class="s2">&quot;highlight_line&quot;</span><span class="err">:</span> <span class="kc">true</span><span class="err">,</span>
</span><span class='line'><span class="err">...</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails on heroku]]></title>
    <link href="http://weichienhung.github.io/blog/2013/08/15/rails-on-heroku/"/>
    <updated>2013-08-15T10:39:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/08/15/rails-on-heroku</id>
    <content type="html"><![CDATA[<p>I pushed <a href="https://github.com/weichienhung/bookmarks-rails">bookmarks-rails</a> project to <a href="https://www.heroku.com/">Heroku</a> yesterday.
Thanks to <a href="http://railsapps.github.io/rails-heroku-tutorial.html">tutorial</a> i don&#8217;t have too many troblem during upload to Heroku.
Some parts of doc are out of dated and here i write down the steps for reference myself in the future.</p>

<!--more-->


<ol>
<li>install heroku toolbelt from <a href="https://toolbelt.heroku.com">heroku</a></li>
<li>heroku doesn&#8217;t support sqllite3, modify sqllite3 to postgres sql</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;sqllite3&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>to</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">group</span> <span class="ss">:development</span><span class="p">,</span> <span class="ss">:test</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;sqlite3&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">group</span> <span class="ss">:production</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;pg&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>3.use <code>thin</code> as production webserver</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">group</span> <span class="ss">:production</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;thin&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>run <code>bundle install --without production</code></li>
<li>In Rails 3.x precompile your assets file, you have to add <code>config.assets.initialize_on_precompile=false</code> to your <code>config/application.rb</code>. Rails 4 ignore this.</li>
<li>run <code>rake assets:precompile RAILS_ENV=production</code></li>
<li>run <code>git commit -am "your commit message"</code> because only commited source code will be pushed to heroku.</li>
<li>run <code>heroku create appname</code> to create your app on heroku. It requires you input your account,password and your ssh public key(id_rsa).</li>
<li>run <code>git push heroku master</code>. You will see your app running on http://appname.herokuapp.com.
Heroku will modify your production datbase connection in database.yml when push to heroku. You don&#8217;t need to put the production setting your database.yml.</li>
<li>run <code>heroku run rake db:migrate</code> to create db on heroku</li>
</ol>


<h2>trouble shooting</h2>

<p>If you use Twitter Bootstrap, you have to comment out favicon related codes in your application.html.erb.  Or you will fail to push to heroku.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;!--</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="sx">%= favicon_link_tag &#39;apple-touch-icon-precomposed.png&#39;, :rel =</span><span class="o">&gt;</span> <span class="s1">&#39;apple-touch-icon-precomposed&#39;</span><span class="p">,</span> <span class="ss">:type</span> <span class="o">=&gt;</span> <span class="s1">&#39;image/png&#39;</span> <span class="sx">%&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sx">  &lt;%= favicon_link_tag &#39;favicon.ico&#39;, :rel =&gt;</span> <span class="s1">&#39;shortcut icon&#39;</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">--&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you modify the app name on Heroku web site, you should remove your remote branch and re-add.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">remote</span> <span class="n">rm</span> <span class="n">oldname</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">remote</span> <span class="n">add</span> <span class="n">newname</span> <span class="n">git</span><span class="vi">@herokuapp</span><span class="o">.</span><span class="n">com</span><span class="ss">:yourapp</span><span class="o">.</span><span class="n">git</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails practice]]></title>
    <link href="http://weichienhung.github.io/blog/2013/08/11/rails-practice/"/>
    <updated>2013-08-11T12:36:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/08/11/rails-practice</id>
    <content type="html"><![CDATA[<p>I push my first rails project <a href="https://github.com/weichienhung/bookmarks-rails">bookmarks-rails</a> to github today. It&#8217;s a very small project for practicing rails framework.
The web provide user a very simple interface to create a bookmark and basic authentication. I take free time after work to finish this project.
Thanks to ihower&#8217;s <a href="http://ihower.tw/rails3/index.html">Ruby on Rails實戰聖經</a>,Yangtheman&#8217;s <a href="http://blog.yangtheman.com/2012/02/09/facebook-connect-with-rails-omniauth-devise/">post</a> and <a href="https://www.codeschool.com/">Code school</a>, it helps me a lot.<br/>
I try skills in this projects<br/>
1. Twitter Bootstrap 3.0.0.rc1<br/>
2. devise account system<br/>
3. omniauth with facebook login<br/>
4. rails REST<br/>
5. RSpec<br/>
6. Capybara</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[memcached study]]></title>
    <link href="http://weichienhung.github.io/blog/2013/08/07/memcached-study/"/>
    <updated>2013-08-07T21:27:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/08/07/memcached-study</id>
    <content type="html"><![CDATA[<p>I studied the memcached since yesterday. It&#8217;s a good cache implementation used by Twitter,Facebook..etc.
Because the official site doesn&#8217;t provide the rpm for download and i can&#8217;t get the latest version from yum.
I learn how to build it from source and also try the <a href="http://repcached.lab.klab.org/">repached</a>(for memcached replication but not official)</p>

<!-- more -->


<h2>how to install memcached from source</h2>

<p>You can refer to <a href="https://code.google.com/p/memcached/wiki/NewInstallFromSource">link</a>(i didn&#8217;t find this post until i solve the installation XD)</p>

<h3>install libevent dependency</h3>

<p>I try download the libevent source from website and build it. But i found <code>yum</code> is the easiest. Don&#8217;t worry if your libevent version is 1.4.x not 2.0.x.
memcached-1.4.15 can be build with libevent-1.4.x</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>yum install libevent-devel
</span></code></pre></td></tr></table></div></figure>


<h3>download the memcached-1.x.x.tar from <a href="http://memcached.org/">memcached.org</a> and untar</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>tar zxvf memcached-1.x.x.tar
</span></code></pre></td></tr></table></div></figure>


<h3>make it</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>./configure --prefix<span class="o">=</span>/usr/local/memcached-1.4.x/
</span><span class='line'>
</span><span class='line'>make
</span><span class='line'>
</span><span class='line'>make install
</span></code></pre></td></tr></table></div></figure>


<p>you may fail in <code>configure</code> and show no libevent dependency. you should add <code>--with-libevent=/usr/local/libevent/</code>(your libevent library folder) in configure</p>

<h2>start memcached</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd</span> /usr/local/memcached-1.4.x/bin/
</span><span class='line'>
</span><span class='line'>./memcached -u nobody -p 11211 -P /usr/local/memcached-1.4.x/bin/mem.pid -d -v
</span></code></pre></td></tr></table></div></figure>


<h2>stop memcached</h2>

<p>find the process id from /usr/local/memcached-1.4.x/bin/mem.pid and kill it</p>

<h2>how to make memcached cluster</h2>

<p>Each memcached node is configured independently in the cluster. They don&#8217;t communicate or exchange data. It&#8217;s the client&#8217;s job to decide which
server  from the cluster. Clients may use the consistent-hash to choose a memcached node and write/read data.<br/>
Memcached make your application performance better but your application have to work correctly even the memcached servers crash.
Memcached is not the storage solution.</p>

<h2>install memcached with repcache</h2>

<p>I upload the related repache patch and memcached-1.4.4 source to Dropbox. You can download from it.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>wget --no-check-certificate https://dl.dropboxusercontent.com/u/60216960/memcached-1.4.4.zip
</span></code></pre></td></tr></table></div></figure>


<h3>patch source before configure</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>patch -p1 -i repcached-2.2-1.4.4.patch
</span></code></pre></td></tr></table></div></figure>


<h3>make it</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>./configure --enable-replication --prefix<span class="o">=</span>/usr/local/memcached-1.4.4-rep/
</span><span class='line'>
</span><span class='line'>make
</span><span class='line'>
</span><span class='line'>make install
</span></code></pre></td></tr></table></div></figure>


<h2>start memcached with repcache</h2>

<p>For example, we have two servers: server 1(192.168.0.103) and server 2(192.168.0.101)<br/>
In server 1</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>./memcached -u nobody -v -p 11211 -X 11212
</span></code></pre></td></tr></table></div></figure>


<p>In server 2</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>./memcached -u nobody -v -p 11211 -x 192.168.0.103 -X 11212
</span></code></pre></td></tr></table></div></figure>


<h3>test the replication</h3>

<p>add key in server 1</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>telnet 192.168.0.103 11211
</span><span class='line'>add hello 0 0 2
</span><span class='line'>99
</span></code></pre></td></tr></table></div></figure>


<p>read in server 2</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>telnet 192.168.0.101 11211
</span><span class='line'>get hello
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[write english blog]]></title>
    <link href="http://weichienhung.github.io/blog/2013/08/06/write-english-blog/"/>
    <updated>2013-08-06T23:12:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/08/06/write-english-blog</id>
    <content type="html"><![CDATA[<p>I receive a email from a stranger today. He writes English email to me and ask an emberjs question.
He saw my old post but can&#8217;t understand what i said because the post was writen by Chinese.
I reply the email and he gets the answer finally.
Although my blog is put on Internet but I never thought someone will get help from here :)
After this I decide to write the post in English from now.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress 設定問題]]></title>
    <link href="http://weichienhung.github.io/blog/2013/07/28/octopress-she-ding-wen-ti/"/>
    <updated>2013-07-28T11:20:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/07/28/octopress-she-ding-wen-ti</id>
    <content type="html"><![CDATA[<p>這兩天使用octopress時遇到了一些問題，有簡單google解決也有亂試之下解決</p>

<ul>
<li>想產生新的文章時出現</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>You have already activated rake 10.1.0, but your Gemfile requires rake 0.9.6. Using bundle <span class="nb">exec</span>
</span></code></pre></td></tr></table></div></figure>


<!--more-->


<p>google之下很單純，只要修改你的Gemfile<br/>
本來是</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>gem <span class="s1">&#39;rake&#39;</span>, <span class="s1">&#39;~&gt; 0.9.6&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>改成以下即可，不過老實說我自己的版本什麼時候吃到10.0我也沒印象</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>gem <span class="s1">&#39;rake&#39;</span>, <span class="s1">&#39;~&gt; 10.0&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>rake deploy時出現</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>src refspec master does not match any
</span><span class='line'>error src refspec master does not match any. error failed to push some refs to
</span></code></pre></td></tr></table></div></figure>


<p>一開始google時網路大部份的文章都是說你的project repo還沒有任何commit，只要加個README commit即可。
但我怎麼試都不行而且明明我的project己經用了一陣子了後來終於發現原來是我的git沒有local master branch。
原因是我之前手動把<code>_deploy</code>目錄砍過的樣子，理論上在你的<code>_deploy</code>目錄打<code>git branch</code>應該要出現<code>* master</code>
在根目錄底下則是出現<code>* source</code><br/>
後來的解決方法就是重設github page</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake setup_github_pages
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[write maintainable css]]></title>
    <link href="http://weichienhung.github.io/blog/2013/07/27/write-maintainable-css/"/>
    <updated>2013-07-27T11:25:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/07/27/write-maintainable-css</id>
    <content type="html"><![CDATA[<p>今天看了<a href="https://github.com/doggy8088/CSS-Guidelines">CSS guideline</a>描述在大型專案如何撰寫容易維護的CSS，我直接從翻譯過文章摘錄了其中覺得還不錯而且執行上也不會太困難的幾點記下來讓自己隨時能夠複習</p>

<!-- more -->


<h3>階層式CSS</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nc">.widget</span><span class="p">{</span>
</span><span class='line'>    <span class="k">padding</span><span class="o">:</span><span class="m">10px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">border</span><span class="o">:</span><span class="m">1px</span> <span class="k">solid</span> <span class="m">#BADA55</span><span class="p">;</span>
</span><span class='line'>    <span class="k">background-color</span><span class="o">:</span><span class="m">#C0FFEE</span><span class="p">;</span>
</span><span class='line'>    <span class="o">-</span><span class="n">webkit</span><span class="o">-</span><span class="k">border</span><span class="o">-</span><span class="n">radius</span><span class="o">:</span><span class="m">4px</span><span class="p">;</span>
</span><span class='line'>       <span class="o">-</span><span class="n">moz</span><span class="o">-</span><span class="k">border</span><span class="o">-</span><span class="n">radius</span><span class="o">:</span><span class="m">4px</span><span class="p">;</span>
</span><span class='line'>            <span class="k">border</span><span class="o">-</span><span class="n">radius</span><span class="o">:</span><span class="m">4px</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>    <span class="nc">.widget-heading</span><span class="p">{</span>
</span><span class='line'>        <span class="k">font-size</span><span class="o">:</span><span class="m">1</span><span class="o">.</span><span class="m">5</span><span class="n">rem</span><span class="p">;</span>
</span><span class='line'>        <span class="k">line-height</span><span class="o">:</span><span class="m">1</span><span class="p">;</span>
</span><span class='line'>        <span class="k">font-weight</span><span class="o">:</span><span class="k">bold</span><span class="p">;</span>
</span><span class='line'>        <span class="k">color</span><span class="o">:</span><span class="m">#BADA55</span><span class="p">;</span>
</span><span class='line'>        <span class="k">margin-right</span><span class="o">:-</span><span class="m">10px</span><span class="p">;</span>
</span><span class='line'>        <span class="k">margin-left</span><span class="o">:</span> <span class="m">-10px</span><span class="p">;</span>
</span><span class='line'>        <span class="k">padding</span><span class="o">:</span><span class="m">0.25em</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>我們可以發現，<code>.widget-heading</code> 是 <code>.widget</code> 的子元素，因為前者比後者多縮排了一級，這使網頁開發人員在閱讀這些樣式時，可以迅速得知在 HTML 裡面的標籤結構大致為何。</p>

<h3>JS hooks</h3>

<p>千萬不要把 CSS 樣式當成 JS hooks 來用。我們在寫 jQuery 的時候，經常會自訂一些 class 樣式類別名稱，以方便我們透過 jQuery 的選取器選中這個元素。<br/>
除此之外，有時候我們也會自訂一些 HTML 屬性，讓 HTML 擁有一些特殊的行為，這些都算是 JS hooks 的應用，如果你把 JS 的行為與樣式綁在一起時，代表我們套用的樣式與 JavaScript 行為無法區分開來，這對可維護性來說也蠻傷的。<br/>
如果你要把 JS 行為與某些標籤綁定起來的話，寫一個 JS 專用的 class 類別名稱。簡單地說就是在名稱上增加一個前綴 .js- 的命名空間，例如 <code>.js-toggle</code>，<code>.js-drag-and-drop</code>，這意味著我們可以透過不同的 class 綁定不同的 JS 行為和 CSS 樣式，而不會為偶發的衝突帶來困擾，範例如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="o">&lt;</span><span class="nt">th</span> <span class="nt">class</span><span class="o">=</span><span class="s2">&quot;is-sortable  js-is-sortable&quot;</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nt">th</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>上面的這個 th 標籤有兩個 class，你可以用 <code>is-sortable</code> 這個類別來定義這個表格的樣式，而用另一個 <code>js-is-sortable</code> 來套用排序功能。</p>

<h3>物件導向 CSS (OOCSS)</h3>

<p>我都是以物件導向的方式撰寫 CSS，我把元件區分成結構（物件）與外觀（擴充）。正如以下想法（注意這個只是想法而非例子）：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nc">.room</span><span class="p">{}</span>
</span><span class='line'>
</span><span class='line'><span class="nc">.room--kitchen</span><span class="p">{}</span>
</span><span class='line'><span class="nc">.room--bedroom</span><span class="p">{}</span>
</span><span class='line'><span class="nc">.room--bathroom</span><span class="p">{}</span>
</span></code></pre></td></tr></table></div></figure>


<p>我們在屋子裡有許多房間，它們都有共同的特點：它們都包含地板、天花板、牆壁和門。這些共享的部分我們可以放到一個抽像的 <code>.room{} class</code> 中。<br/>
不過我們還有其它與眾不同的房間：一個廚房可能有地磚，臥室可能有地毯，洗手間可能沒有窗戶但是臥室會有，每個房間的牆壁顏色也許也會不一樣。<br/>
物件導向 CSS 的思考方式，使我們把相同部分抽像出來，並組成結構部分，然後再用更具體的 class 來擴充這些外觀，並新增特殊的處理方法。</p>

<h3>簡寫</h3>

<p>使用簡寫的 CSS 語法應該要特別注意。
或許你會嘗試撰寫像 <code>background:red;</code> 這樣的屬性，或許你這樣寫的背後真正意思是 <code>background-image:none; background-position:top left; background-repeat: repeat; background-color:red;</code> 這樣的語法，雖然這樣寫通常不會出什麼問題，但是哪怕只出一次問題就值得考慮要不要放棄簡寫了，在這個例子裡，你應該將其改寫為 <code>background-color:red;</code> 比較洽當。<br/>
類似的，像 <code>margin:0;</code> 這樣的宣告迪缺清楚明瞭，但是還是應該 盡量寫清楚，如果你只是想修改底部的 margin，最好具體一點，寫成 <code>margin-bottom:0;</code> 會來的好很多。
你必須把樣式定義的很清楚，不要因為習慣用簡寫，而不小心改到其他樣式的相關屬性。例如你只想改掉底部的 margin，那就不要用也會把其它邊距也歸零的 <code>margin:0</code> 語法。
簡寫雖然是好東西，但是切忌濫用。</p>

<h3>在 CSS 裡千萬不要用 ID</h3>

<p>在 HTML 裡 ID 可以用於 JS 以及錨點定位(anchor)，但是在 CSS 裡建議只用 class 來設定樣式，你不會想看到在任何一個樣式表中看見使用 ID 的選取器 (#someid)。</p>

<h3>選取器</h3>

<p>請維持選取器簡短、有效率與可攜性。<br/>
那些依賴頁面元素來定位的選取器有很多缺點。例如 <code>.sidebar h3 span{}</code> 這樣的選取器，就是太過依賴元素的相對位置，所以很難把 span 移到 h3 和 sidebar 外面並維持其樣式。<br/>
結構複雜的選取器也會影響網頁顯示效能，選取器結構越複雜（如 <code>.sidebar h3 span</code> 為三層，<code>.content ul p a</code> 是四層），瀏覽器對於顯示網頁的負擔就越大。<br/>
所以，盡量不要讓樣式依賴於其他元素的位置，也盡量讓選取器保持簡短而易懂。</p>

<h3>!important</h3>

<p>你只應該在一些輔助類別(helper classes)上使用 <code>!important</code> 修飾子。用 <code>!important</code> 提升優先級也可以，例如如果你要讓某條規則 一直 生效的話，可以用 <code>.error{ color:red!important; }</code>。<br/>
避免主動使用 <code>!important</code> 修飾子。例如當你的 CSS 寫得很複雜的時候，不要因為想偷懶而使用 <code>!important</code> 來取巧，建議重寫你之前寫好的樣式，並重構選取系的使用方式。記得：維持選取器的簡短並且避免用 ID，將可有效幫助你寫好 CSS。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[shell script on linux ]]></title>
    <link href="http://weichienhung.github.io/blog/2013/07/10/linux-shellscript/"/>
    <updated>2013-07-10T22:15:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/07/10/linux-shellscript</id>
    <content type="html"><![CDATA[<p>前陣子用linux shell script寫了module自動deploy機制。紀錄一下這之中遇到的問題及常用的指令。<br/>
簡單的自動deploy不外乎就是將檔案傳送至遠端機器然後進行安裝動作，修改設定檔。</p>

<ul>
<li><h3>login to remote server</h3></li>
</ul>


<!-- more -->


<p>由於原生shell script裡面無法自動輸入帳密進行登錄動作，基本上常用的方法有兩種。<br/>
第一種方法就是建立ssh public key然後放在遠端機器上，這樣你ssh時就不需要再輸入密碼。
第二種方法是安裝其它套件協助自動輸入密碼。在這裡我介紹的是使用<a href="http://sourceforge.net/projects/sshpass/">sshpass</a>。
安裝完後要記得自己先手動登入一次遠端機器，不然它不會作用。接下來你要登入遠端機器的指令就如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sshpass -p <span class="o">{</span>your password<span class="o">}</span> ssh root@<span class="o">{</span>remote ip<span class="o">}</span> <span class="s2">&quot;echo &#39;hello world&#39;&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>這樣就可以登入遠端機器並輸出一個hello world。</p>

<p>另外你也可以用scp來拷貝資料過去</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sshpass -p <span class="o">{</span>your password<span class="o">}</span> scp data.zip root@<span class="o">{</span>remote ip<span class="o">}</span>:/home/root/
</span></code></pre></td></tr></table></div></figure>


<p>這樣就可以把data.zip丟到遠端/home/root/目錄</p>

<ul>
<li><h3>execute command on remote server</h3>

<p>簡單地方法就是在sshpass之後帶入command</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sshpass -p <span class="o">{</span>your password<span class="o">}</span> ssh root@<span class="o">{</span>remote ip<span class="o">}</span> <span class="s2">&quot;mkdir myFolder;rm myFile.txt&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>這樣就可以在登入後執行mkdir及rm兩個指令。
另一種方法就是把你要執行的指令寫成一個shell script，然後scp過去後執行。例如我把這兩行指令寫在myScript.sh裡</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>mkdir myFolder
</span><span class='line'>rm myFile.txt
</span></code></pre></td></tr></table></div></figure>


<p>然後執行底下指令</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sshpass -p <span class="o">{</span>your password<span class="o">}</span> scp myScript.sh root@<span class="o">{</span>remote ip<span class="o">}</span>:/home/root/
</span><span class='line'>sshpass -p <span class="o">{</span>your password<span class="o">}</span> ssh root@<span class="o">{</span>remote ip<span class="o">}</span> <span class="s2">&quot;/home/root/myScript.sh&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><h3>retrieve the specified string from a line</h3>

<p>例如我有一個my.xml檔裡面紀錄了最新的版號如下</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;myxml&gt;</span>
</span><span class='line'>  <span class="nt">&lt;release&gt;</span>1.0.22<span class="nt">&lt;/release&gt;</span>
</span><span class='line'><span class="nt">&lt;/myxml&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>用底下的指令來取出版號</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">latest</span><span class="o">=</span><span class="k">$(</span>cat my.xml | sed -n <span class="s1">&#39;s/.*&lt;release&gt;\(.*\)&lt;\/release&gt;/\1/p&#39;</span><span class="k">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>由於(, ), /是特殊字元,所以在re裡前面都要加上\<br/>
後面的\1表示要取result的第一個group。<br/>
整個用$()包覆是因為要把執行結果放進latest這個變數。</p>

<ul>
<li><h3>replace string in a config file</h3>

<p>使用sed指令加上regular expression</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sed -i <span class="s1">&#39;s/.*MyTest.*/YourTest/&#39;</span> config.txt
</span></code></pre></td></tr></table></div></figure>


<p>這樣就可以把config.txt裡面所有字串裡中間有MyTest替換成YourTest</p>

<ul>
<li><h3>insert a new line in a config file</h3>

<p>使用sed指令加上regular expression</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sed -i <span class="s1">&#39;s/.*MyTest.*/&amp;\nYourTest/g&#39;</span> config.txt
</span></code></pre></td></tr></table></div></figure>


<p>這樣就可以在config.txt裡面插入新的一行YourTest在每一行符合中間有MyTest的字串。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[hello octopress]]></title>
    <link href="http://weichienhung.github.io/blog/2013/07/07/hello-again/"/>
    <updated>2013-07-07T15:22:00+08:00</updated>
    <id>http://weichienhung.github.io/blog/2013/07/07/hello-again</id>
    <content type="html"><![CDATA[<p>真的是好久沒寫blog了。看了一下最後一篇是在3月2日已經整整4個月沒寫了。</p>

<p>markdown的語法也都快忘光了:(一開始執行rake new_post時還發生錯誤無法產生新文章，快速地google了一下原來是dependency太舊的關係，執行完bundle update就OK了真是好險啊。
前陣子使用emberjs發現了一些之前沒注意到的細節。</p>

<!--more-->


<h3>使用transitionTo不會呼叫在route裡的model function</h3>

<p>例如底下的程式碼，當使用transitionTo()到post route的時候. emberjs並不會幫你呼叫model(), 所以在toPost()裡面必須自己將所需要的model產生並當成
參數一併帶在transitionTo()裡面。model()只有當你直接在URL進入post route才會被呼叫。
setupController則是無論使用transitionTo()或是在browser直接打URL進去post route都會被呼叫。</p>

<figure class='code'><figcaption><span>example</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">application</span><span class="p">.</span><span class="nx">PostRoute</span> <span class="o">=</span> <span class="nx">Ember</span><span class="p">.</span><span class="nx">Route</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>  <span class="nx">setupController</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">controller</span><span class="p">,</span> <span class="nx">model</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">controller</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;content&#39;</span><span class="p">,</span> <span class="nx">model</span><span class="p">);</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">model</span> <span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">params</span><span class="p">){</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">application</span><span class="p">.</span><span class="nx">Post</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">params</span><span class="p">.</span><span class="nx">post_id</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nx">toPost</span> <span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">target_post</span><span class="p">){</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">model</span> <span class="o">=</span> <span class="nx">application</span><span class="p">.</span><span class="nx">Post</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">target_post</span><span class="p">);</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">transitionTo</span><span class="p">(</span><span class="s1">&#39;post&#39;</span><span class="p">,</span> <span class="nx">model</span><span class="p">);</span>
</span><span class='line'><span class="p">},</span>
</span></code></pre></td></tr></table></div></figure>


<h3>nested route使用</h3>

<p>一開始以為nest route的命名規則都是parent route name + child route name。
其實不盡然，原來是要看你是使用this.route或是this.resource如果是this.route的話就要加上parent name(如底下的board and summary route)</p>

<p>當要轉換到board這個route就要加上parent route name. (見底下的transitionTo())</p>

<figure class='code'><figcaption><span>example</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">MyApp</span><span class="p">.</span><span class="nx">Router</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">route</span><span class="p">(</span><span class="s2">&quot;landing&quot;</span><span class="p">,</span> <span class="p">{</span><span class="nx">path</span><span class="o">:</span> <span class="s2">&quot;/landing&quot;</span><span class="p">});</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">resource</span><span class="p">(</span><span class="s2">&quot;lobby&quot;</span><span class="p">,</span> <span class="p">{</span><span class="nx">path</span><span class="o">:</span> <span class="s2">&quot;/lobby&quot;</span><span class="p">},</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">route</span><span class="p">(</span><span class="s2">&quot;board&quot;</span><span class="p">,</span> <span class="p">{</span><span class="nx">path</span><span class="o">:</span> <span class="s2">&quot;/board&quot;</span><span class="p">}</span> <span class="p">);</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">resource</span><span class="p">(</span><span class="s2">&quot;store&quot;</span><span class="p">,</span> <span class="p">{</span><span class="nx">path</span><span class="o">:</span> <span class="s2">&quot;/store&quot;</span><span class="p">},</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">route</span><span class="p">(</span><span class="s2">&quot;summary&quot;</span><span class="p">,</span> <span class="p">{</span><span class="nx">path</span><span class="o">:</span> <span class="s2">&quot;/summary/:game_id&quot;</span><span class="p">}</span> <span class="p">);</span>
</span><span class='line'>      <span class="p">});</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">route</span><span class="p">(</span><span class="s2">&quot;pageNotFound&quot;</span><span class="p">,</span> <span class="p">{</span><span class="nx">path</span><span class="o">:</span> <span class="s2">&quot;*:&quot;</span><span class="p">});</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//route naming</span>
</span><span class='line'><span class="nx">MyApp</span><span class="p">.</span><span class="nx">LandingRoute</span> <span class="o">=</span> <span class="nx">Ember</span><span class="p">.</span><span class="nx">Route</span><span class="p">.</span><span class="nx">extend</span><span class="p">({});</span>
</span><span class='line'><span class="nx">MyApp</span><span class="p">.</span><span class="nx">LobbyRoute</span> <span class="o">=</span> <span class="nx">Ember</span><span class="p">.</span><span class="nx">Route</span><span class="p">.</span><span class="nx">extend</span><span class="p">({});</span>
</span><span class='line'><span class="nx">MyApp</span><span class="p">.</span><span class="nx">LobbyBoardRoute</span> <span class="o">=</span> <span class="nx">Ember</span><span class="p">.</span><span class="nx">Route</span><span class="p">.</span><span class="nx">extend</span><span class="p">({});</span>
</span><span class='line'><span class="nx">MyApp</span><span class="p">.</span><span class="nx">StoreRoute</span> <span class="o">=</span> <span class="nx">Ember</span><span class="p">.</span><span class="nx">Route</span><span class="p">.</span><span class="nx">extend</span><span class="p">({});</span>
</span><span class='line'><span class="nx">MyApp</span><span class="p">.</span><span class="nx">StoreSummaryRoute</span> <span class="o">=</span> <span class="nx">Ember</span><span class="p">.</span><span class="nx">Route</span><span class="p">.</span><span class="nx">extend</span><span class="p">({});</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nx">toBoard</span> <span class="o">:</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">transitionTo</span><span class="p">(</span><span class="s1">&#39;lobby.board&#39;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
